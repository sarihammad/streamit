// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/streamit.proto
// Protobuf C++ Version: 6.32.1

#ifndef proto_2fstreamit_2eproto_2epb_2eh
#define proto_2fstreamit_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/extension_set.h" // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/repeated_field.h" // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fstreamit_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
} // namespace internal
} // namespace protobuf
} // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fstreamit_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_proto_2fstreamit_2eproto;
} // extern "C"
namespace streamit {
namespace v1 {
enum Ack : int;
extern const uint32_t Ack_internal_data_[];
enum ErrorCode : int;
extern const uint32_t ErrorCode_internal_data_[];
class CommitOffsetRequest;
struct CommitOffsetRequestDefaultTypeInternal;
extern CommitOffsetRequestDefaultTypeInternal _CommitOffsetRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CommitOffsetRequest_class_data_;
class CommitOffsetResponse;
struct CommitOffsetResponseDefaultTypeInternal;
extern CommitOffsetResponseDefaultTypeInternal _CommitOffsetResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CommitOffsetResponse_class_data_;
class CreateTopicRequest;
struct CreateTopicRequestDefaultTypeInternal;
extern CreateTopicRequestDefaultTypeInternal _CreateTopicRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CreateTopicRequest_class_data_;
class CreateTopicResponse;
struct CreateTopicResponseDefaultTypeInternal;
extern CreateTopicResponseDefaultTypeInternal _CreateTopicResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CreateTopicResponse_class_data_;
class DescribeTopicRequest;
struct DescribeTopicRequestDefaultTypeInternal;
extern DescribeTopicRequestDefaultTypeInternal _DescribeTopicRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DescribeTopicRequest_class_data_;
class DescribeTopicResponse;
struct DescribeTopicResponseDefaultTypeInternal;
extern DescribeTopicResponseDefaultTypeInternal _DescribeTopicResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DescribeTopicResponse_class_data_;
class FetchRequest;
struct FetchRequestDefaultTypeInternal;
extern FetchRequestDefaultTypeInternal _FetchRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FetchRequest_class_data_;
class FetchResponse;
struct FetchResponseDefaultTypeInternal;
extern FetchResponseDefaultTypeInternal _FetchResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FetchResponse_class_data_;
class FindLeaderRequest;
struct FindLeaderRequestDefaultTypeInternal;
extern FindLeaderRequestDefaultTypeInternal _FindLeaderRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FindLeaderRequest_class_data_;
class FindLeaderResponse;
struct FindLeaderResponseDefaultTypeInternal;
extern FindLeaderResponseDefaultTypeInternal _FindLeaderResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FindLeaderResponse_class_data_;
class PartitionMetadata;
struct PartitionMetadataDefaultTypeInternal;
extern PartitionMetadataDefaultTypeInternal _PartitionMetadata_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PartitionMetadata_class_data_;
class PollAssignmentRequest;
struct PollAssignmentRequestDefaultTypeInternal;
extern PollAssignmentRequestDefaultTypeInternal _PollAssignmentRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PollAssignmentRequest_class_data_;
class PollAssignmentResponse;
struct PollAssignmentResponseDefaultTypeInternal;
extern PollAssignmentResponseDefaultTypeInternal _PollAssignmentResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PollAssignmentResponse_class_data_;
class PollAssignmentResponse_Assignment;
struct PollAssignmentResponse_AssignmentDefaultTypeInternal;
extern PollAssignmentResponse_AssignmentDefaultTypeInternal _PollAssignmentResponse_Assignment_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PollAssignmentResponse_Assignment_class_data_;
class ProduceRequest;
struct ProduceRequestDefaultTypeInternal;
extern ProduceRequestDefaultTypeInternal _ProduceRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProduceRequest_class_data_;
class ProduceResponse;
struct ProduceResponseDefaultTypeInternal;
extern ProduceResponseDefaultTypeInternal _ProduceResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProduceResponse_class_data_;
class Record;
struct RecordDefaultTypeInternal;
extern RecordDefaultTypeInternal _Record_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Record_class_data_;
class RecordBatch;
struct RecordBatchDefaultTypeInternal;
extern RecordBatchDefaultTypeInternal _RecordBatch_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RecordBatch_class_data_;
class TopicMetadata;
struct TopicMetadataDefaultTypeInternal;
extern TopicMetadataDefaultTypeInternal _TopicMetadata_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TopicMetadata_class_data_;
} // namespace v1
} // namespace streamit
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::streamit::v1::Ack_internal_data_> internal::EnumTraitsImpl::value<::streamit::v1::Ack>;
template <>
internal::EnumTraitsT<::streamit::v1::ErrorCode_internal_data_>
    internal::EnumTraitsImpl::value<::streamit::v1::ErrorCode>;
} // namespace protobuf
} // namespace google

namespace streamit {
namespace v1 {
enum Ack : int {
  ACK_LEADER = 0,
  ACK_QUORUM = 1,
  Ack_INT_MIN_SENTINEL_DO_NOT_USE_ = ::std::numeric_limits<::int32_t>::min(),
  Ack_INT_MAX_SENTINEL_DO_NOT_USE_ = ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t Ack_internal_data_[];
inline constexpr Ack Ack_MIN = static_cast<Ack>(0);
inline constexpr Ack Ack_MAX = static_cast<Ack>(1);
inline bool Ack_IsValid(int value) {
  return 0 <= value && value <= 1;
}
inline constexpr int Ack_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Ack_descriptor();
template <typename T>
const ::std::string& Ack_Name(T value) {
  static_assert(::std::is_same<T, Ack>::value || ::std::is_integral<T>::value, "Incorrect type passed to Ack_Name().");
  return Ack_Name(static_cast<Ack>(value));
}
template <>
inline const ::std::string& Ack_Name(Ack value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Ack_descriptor, 0, 1>(static_cast<int>(value));
}
inline bool Ack_Parse(::absl::string_view name, Ack* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ack>(Ack_descriptor(), name, value);
}
enum ErrorCode : int {
  OK = 0,
  THROTTLED = 1,
  NOT_LEADER = 2,
  UNKNOWN_TOPIC = 3,
  OFFSET_OUT_OF_RANGE = 4,
  IDEMPOTENT_REPLAY = 5,
  INTERNAL = 6,
  INVALID_ARGUMENT = 7,
  NOT_FOUND = 8,
  ALREADY_EXISTS = 9,
  PERMISSION_DENIED = 10,
  RESOURCE_EXHAUSTED = 11,
  FAILED_PRECONDITION = 12,
  OUT_OF_RANGE = 13,
  UNIMPLEMENTED = 14,
  UNAVAILABLE = 15,
  DATA_LOSS = 16,
  UNAUTHENTICATED = 17,
  DEADLINE_EXCEEDED = 18,
  CANCELLED = 19,
  UNKNOWN = 20,
  ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::std::numeric_limits<::int32_t>::min(),
  ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t ErrorCode_internal_data_[];
inline constexpr ErrorCode ErrorCode_MIN = static_cast<ErrorCode>(0);
inline constexpr ErrorCode ErrorCode_MAX = static_cast<ErrorCode>(20);
inline bool ErrorCode_IsValid(int value) {
  return 0 <= value && value <= 20;
}
inline constexpr int ErrorCode_ARRAYSIZE = 20 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ErrorCode_descriptor();
template <typename T>
const ::std::string& ErrorCode_Name(T value) {
  static_assert(::std::is_same<T, ErrorCode>::value || ::std::is_integral<T>::value,
                "Incorrect type passed to ErrorCode_Name().");
  return ErrorCode_Name(static_cast<ErrorCode>(value));
}
template <>
inline const ::std::string& ErrorCode_Name(ErrorCode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ErrorCode_descriptor, 0, 20>(static_cast<int>(value));
}
inline bool ErrorCode_Parse(::absl::string_view name, ErrorCode* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(ErrorCode_descriptor(), name, value);
}

// ===================================================================

// -------------------------------------------------------------------

class RecordBatch final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.RecordBatch) */ {
public:
  inline RecordBatch() : RecordBatch(nullptr) {
  }
  ~RecordBatch() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RecordBatch* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RecordBatch));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RecordBatch(::google::protobuf::internal::ConstantInitialized);

  inline RecordBatch(const RecordBatch& from) : RecordBatch(nullptr, from) {
  }
  inline RecordBatch(RecordBatch&& from) noexcept : RecordBatch(nullptr, ::std::move(from)) {
  }
  inline RecordBatch& operator=(const RecordBatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecordBatch& operator=(RecordBatch&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RecordBatch& default_instance() {
    return *reinterpret_cast<const RecordBatch*>(&_RecordBatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(RecordBatch& a, RecordBatch& b) {
    a.Swap(&b);
  }
  inline void Swap(RecordBatch* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecordBatch* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RecordBatch* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RecordBatch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RecordBatch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RecordBatch& from) {
    RecordBatch::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RecordBatch* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.RecordBatch";
  }

protected:
  explicit RecordBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RecordBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RecordBatch& from);
  RecordBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RecordBatch&& from) noexcept : RecordBatch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPayloadFieldNumber = 2,
    kBaseOffsetFieldNumber = 1,
    kCrc32FieldNumber = 3,
  };
  // bytes payload = 2;
  void clear_payload();
  const ::std::string& payload() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_payload(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_payload();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_payload();
  void set_allocated_payload(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_payload() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_payload(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_payload();

public:
  // int64 base_offset = 1;
  void clear_base_offset();
  ::int64_t base_offset() const;
  void set_base_offset(::int64_t value);

private:
  ::int64_t _internal_base_offset() const;
  void _internal_set_base_offset(::int64_t value);

public:
  // uint32 crc32 = 3;
  void clear_crc32();
  ::uint32_t crc32() const;
  void set_crc32(::uint32_t value);

private:
  ::uint32_t _internal_crc32() const;
  void _internal_set_crc32(::uint32_t value);

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.RecordBatch)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const RecordBatch& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr payload_;
    ::int64_t base_offset_;
    ::uint32_t crc32_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RecordBatch_class_data_;
// -------------------------------------------------------------------

class Record final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.Record) */ {
public:
  inline Record() : Record(nullptr) {
  }
  ~Record() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Record* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Record));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Record(::google::protobuf::internal::ConstantInitialized);

  inline Record(const Record& from) : Record(nullptr, from) {
  }
  inline Record(Record&& from) noexcept : Record(nullptr, ::std::move(from)) {
  }
  inline Record& operator=(const Record& from) {
    CopyFrom(from);
    return *this;
  }
  inline Record& operator=(Record&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Record& default_instance() {
    return *reinterpret_cast<const Record*>(&_Record_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Record& a, Record& b) {
    a.Swap(&b);
  }
  inline void Swap(Record* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Record* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Record* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Record>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Record& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Record& from) {
    Record::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Record* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.Record";
  }

protected:
  explicit Record(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Record(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Record& from);
  Record(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Record&& from) noexcept : Record(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
    kTimestampMsFieldNumber = 3,
  };
  // bytes key = 1;
  void clear_key();
  const ::std::string& key() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_key();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_key();
  void set_allocated_key(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_key() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_key(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_key();

public:
  // bytes value = 2;
  void clear_value();
  const ::std::string& value() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_value();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_value();
  void set_allocated_value(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_value() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_value(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_value();

public:
  // int64 timestamp_ms = 3;
  void clear_timestamp_ms();
  ::int64_t timestamp_ms() const;
  void set_timestamp_ms(::int64_t value);

private:
  ::int64_t _internal_timestamp_ms() const;
  void _internal_set_timestamp_ms(::int64_t value);

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.Record)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const Record& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::int64_t timestamp_ms_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Record_class_data_;
// -------------------------------------------------------------------

class ProduceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.ProduceResponse) */ {
public:
  inline ProduceResponse() : ProduceResponse(nullptr) {
  }
  ~ProduceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProduceResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProduceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProduceResponse(::google::protobuf::internal::ConstantInitialized);

  inline ProduceResponse(const ProduceResponse& from) : ProduceResponse(nullptr, from) {
  }
  inline ProduceResponse(ProduceResponse&& from) noexcept : ProduceResponse(nullptr, ::std::move(from)) {
  }
  inline ProduceResponse& operator=(const ProduceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProduceResponse& operator=(ProduceResponse&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProduceResponse& default_instance() {
    return *reinterpret_cast<const ProduceResponse*>(&_ProduceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ProduceResponse& a, ProduceResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ProduceResponse* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProduceResponse* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProduceResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProduceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProduceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProduceResponse& from) {
    ProduceResponse::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProduceResponse* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.ProduceResponse";
  }

protected:
  explicit ProduceResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProduceResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProduceResponse& from);
  ProduceResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProduceResponse&& from) noexcept
      : ProduceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorMessageFieldNumber = 3,
    kLeaderHintFieldNumber = 5,
    kBaseOffsetFieldNumber = 1,
    kErrorCodeFieldNumber = 2,
    kRetryAfterMsFieldNumber = 4,
  };
  // string error_message = 3;
  void clear_error_message();
  const ::std::string& error_message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_error_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_error_message();
  void set_allocated_error_message(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_error_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_error_message();

public:
  // string leader_hint = 5;
  void clear_leader_hint();
  const ::std::string& leader_hint() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_leader_hint(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_leader_hint();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_leader_hint();
  void set_allocated_leader_hint(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_leader_hint() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_leader_hint(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_leader_hint();

public:
  // int64 base_offset = 1;
  void clear_base_offset();
  ::int64_t base_offset() const;
  void set_base_offset(::int64_t value);

private:
  ::int64_t _internal_base_offset() const;
  void _internal_set_base_offset(::int64_t value);

public:
  // .streamit.v1.ErrorCode error_code = 2;
  void clear_error_code();
  ::streamit::v1::ErrorCode error_code() const;
  void set_error_code(::streamit::v1::ErrorCode value);

private:
  ::streamit::v1::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::streamit::v1::ErrorCode value);

public:
  // int32 retry_after_ms = 4;
  void clear_retry_after_ms();
  ::int32_t retry_after_ms() const;
  void set_retry_after_ms(::int32_t value);

private:
  ::int32_t _internal_retry_after_ms() const;
  void _internal_set_retry_after_ms(::int32_t value);

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.ProduceResponse)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 60, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const ProduceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    ::google::protobuf::internal::ArenaStringPtr leader_hint_;
    ::int64_t base_offset_;
    int error_code_;
    ::int32_t retry_after_ms_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProduceResponse_class_data_;
// -------------------------------------------------------------------

class PollAssignmentResponse_Assignment final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.PollAssignmentResponse.Assignment) */ {
public:
  inline PollAssignmentResponse_Assignment() : PollAssignmentResponse_Assignment(nullptr) {
  }
  ~PollAssignmentResponse_Assignment() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PollAssignmentResponse_Assignment* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PollAssignmentResponse_Assignment));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PollAssignmentResponse_Assignment(::google::protobuf::internal::ConstantInitialized);

  inline PollAssignmentResponse_Assignment(const PollAssignmentResponse_Assignment& from)
      : PollAssignmentResponse_Assignment(nullptr, from) {
  }
  inline PollAssignmentResponse_Assignment(PollAssignmentResponse_Assignment&& from) noexcept
      : PollAssignmentResponse_Assignment(nullptr, ::std::move(from)) {
  }
  inline PollAssignmentResponse_Assignment& operator=(const PollAssignmentResponse_Assignment& from) {
    CopyFrom(from);
    return *this;
  }
  inline PollAssignmentResponse_Assignment& operator=(PollAssignmentResponse_Assignment&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PollAssignmentResponse_Assignment& default_instance() {
    return *reinterpret_cast<const PollAssignmentResponse_Assignment*>(
        &_PollAssignmentResponse_Assignment_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(PollAssignmentResponse_Assignment& a, PollAssignmentResponse_Assignment& b) {
    a.Swap(&b);
  }
  inline void Swap(PollAssignmentResponse_Assignment* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PollAssignmentResponse_Assignment* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PollAssignmentResponse_Assignment* PROTOBUF_NONNULL
  New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PollAssignmentResponse_Assignment>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PollAssignmentResponse_Assignment& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PollAssignmentResponse_Assignment& from) {
    PollAssignmentResponse_Assignment::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PollAssignmentResponse_Assignment* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.PollAssignmentResponse.Assignment";
  }

protected:
  explicit PollAssignmentResponse_Assignment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PollAssignmentResponse_Assignment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                                    const PollAssignmentResponse_Assignment& from);
  PollAssignmentResponse_Assignment(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                                    PollAssignmentResponse_Assignment&& from) noexcept
      : PollAssignmentResponse_Assignment(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPartitionsFieldNumber = 2,
    kTopicFieldNumber = 1,
  };
  // repeated int32 partitions = 2;
  int partitions_size() const;

private:
  int _internal_partitions_size() const;

public:
  void clear_partitions();
  ::int32_t partitions(int index) const;
  void set_partitions(int index, ::int32_t value);
  void add_partitions(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& partitions() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_partitions();

private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_partitions() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_partitions();

public:
  // string topic = 1;
  void clear_topic();
  const ::std::string& topic() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_topic(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_topic();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_topic();
  void set_allocated_topic(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_topic() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_topic(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_topic();

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.PollAssignmentResponse.Assignment)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 59, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const PollAssignmentResponse_Assignment& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> partitions_;
    ::google::protobuf::internal::CachedSize _partitions_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr topic_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PollAssignmentResponse_Assignment_class_data_;
// -------------------------------------------------------------------

class PollAssignmentRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.PollAssignmentRequest) */ {
public:
  inline PollAssignmentRequest() : PollAssignmentRequest(nullptr) {
  }
  ~PollAssignmentRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PollAssignmentRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PollAssignmentRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PollAssignmentRequest(::google::protobuf::internal::ConstantInitialized);

  inline PollAssignmentRequest(const PollAssignmentRequest& from) : PollAssignmentRequest(nullptr, from) {
  }
  inline PollAssignmentRequest(PollAssignmentRequest&& from) noexcept
      : PollAssignmentRequest(nullptr, ::std::move(from)) {
  }
  inline PollAssignmentRequest& operator=(const PollAssignmentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PollAssignmentRequest& operator=(PollAssignmentRequest&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PollAssignmentRequest& default_instance() {
    return *reinterpret_cast<const PollAssignmentRequest*>(&_PollAssignmentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(PollAssignmentRequest& a, PollAssignmentRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PollAssignmentRequest* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PollAssignmentRequest* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PollAssignmentRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PollAssignmentRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PollAssignmentRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PollAssignmentRequest& from) {
    PollAssignmentRequest::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PollAssignmentRequest* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.PollAssignmentRequest";
  }

protected:
  explicit PollAssignmentRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PollAssignmentRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PollAssignmentRequest& from);
  PollAssignmentRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PollAssignmentRequest&& from) noexcept
      : PollAssignmentRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTopicsFieldNumber = 3,
    kGroupFieldNumber = 1,
    kMemberIdFieldNumber = 2,
  };
  // repeated string topics = 3;
  int topics_size() const;

private:
  int _internal_topics_size() const;

public:
  void clear_topics();
  const ::std::string& topics(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_topics(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_topics(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_topics();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_topics(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& topics() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_topics();

private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_topics() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_topics();

public:
  // string group = 1;
  void clear_group();
  const ::std::string& group() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_group(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_group();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_group();
  void set_allocated_group(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_group() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_group(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_group();

public:
  // string member_id = 2;
  void clear_member_id();
  const ::std::string& member_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_member_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_member_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_member_id();
  void set_allocated_member_id(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_member_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_member_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_member_id();

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.PollAssignmentRequest)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 62, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const PollAssignmentRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> topics_;
    ::google::protobuf::internal::ArenaStringPtr group_;
    ::google::protobuf::internal::ArenaStringPtr member_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PollAssignmentRequest_class_data_;
// -------------------------------------------------------------------

class PartitionMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.PartitionMetadata) */ {
public:
  inline PartitionMetadata() : PartitionMetadata(nullptr) {
  }
  ~PartitionMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PartitionMetadata* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PartitionMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PartitionMetadata(::google::protobuf::internal::ConstantInitialized);

  inline PartitionMetadata(const PartitionMetadata& from) : PartitionMetadata(nullptr, from) {
  }
  inline PartitionMetadata(PartitionMetadata&& from) noexcept : PartitionMetadata(nullptr, ::std::move(from)) {
  }
  inline PartitionMetadata& operator=(const PartitionMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline PartitionMetadata& operator=(PartitionMetadata&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PartitionMetadata& default_instance() {
    return *reinterpret_cast<const PartitionMetadata*>(&_PartitionMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(PartitionMetadata& a, PartitionMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(PartitionMetadata* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PartitionMetadata* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PartitionMetadata* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PartitionMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PartitionMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PartitionMetadata& from) {
    PartitionMetadata::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PartitionMetadata* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.PartitionMetadata";
  }

protected:
  explicit PartitionMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PartitionMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PartitionMetadata& from);
  PartitionMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PartitionMetadata&& from) noexcept
      : PartitionMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReplicasFieldNumber = 3,
    kIsrFieldNumber = 4,
    kPartitionFieldNumber = 1,
    kLeaderFieldNumber = 2,
  };
  // repeated int32 replicas = 3;
  int replicas_size() const;

private:
  int _internal_replicas_size() const;

public:
  void clear_replicas();
  ::int32_t replicas(int index) const;
  void set_replicas(int index, ::int32_t value);
  void add_replicas(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& replicas() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_replicas();

private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_replicas() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_replicas();

public:
  // repeated int32 isr = 4;
  int isr_size() const;

private:
  int _internal_isr_size() const;

public:
  void clear_isr();
  ::int32_t isr(int index) const;
  void set_isr(int index, ::int32_t value);
  void add_isr(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& isr() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_isr();

private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_isr() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_isr();

public:
  // int32 partition = 1;
  void clear_partition();
  ::int32_t partition() const;
  void set_partition(::int32_t value);

private:
  ::int32_t _internal_partition() const;
  void _internal_set_partition(::int32_t value);

public:
  // int32 leader = 2;
  void clear_leader();
  ::int32_t leader() const;
  void set_leader(::int32_t value);

private:
  ::int32_t _internal_leader() const;
  void _internal_set_leader(::int32_t value);

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.PartitionMetadata)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const PartitionMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> replicas_;
    ::google::protobuf::internal::CachedSize _replicas_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int32_t> isr_;
    ::google::protobuf::internal::CachedSize _isr_cached_byte_size_;
    ::int32_t partition_;
    ::int32_t leader_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PartitionMetadata_class_data_;
// -------------------------------------------------------------------

class FindLeaderResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.FindLeaderResponse) */ {
public:
  inline FindLeaderResponse() : FindLeaderResponse(nullptr) {
  }
  ~FindLeaderResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FindLeaderResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FindLeaderResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FindLeaderResponse(::google::protobuf::internal::ConstantInitialized);

  inline FindLeaderResponse(const FindLeaderResponse& from) : FindLeaderResponse(nullptr, from) {
  }
  inline FindLeaderResponse(FindLeaderResponse&& from) noexcept : FindLeaderResponse(nullptr, ::std::move(from)) {
  }
  inline FindLeaderResponse& operator=(const FindLeaderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FindLeaderResponse& operator=(FindLeaderResponse&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FindLeaderResponse& default_instance() {
    return *reinterpret_cast<const FindLeaderResponse*>(&_FindLeaderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(FindLeaderResponse& a, FindLeaderResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FindLeaderResponse* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FindLeaderResponse* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FindLeaderResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FindLeaderResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FindLeaderResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FindLeaderResponse& from) {
    FindLeaderResponse::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FindLeaderResponse* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.FindLeaderResponse";
  }

protected:
  explicit FindLeaderResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FindLeaderResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FindLeaderResponse& from);
  FindLeaderResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FindLeaderResponse&& from) noexcept
      : FindLeaderResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLeaderHostFieldNumber = 2,
    kErrorMessageFieldNumber = 5,
    kLeaderBrokerIdFieldNumber = 1,
    kLeaderPortFieldNumber = 3,
    kErrorCodeFieldNumber = 4,
  };
  // string leader_host = 2;
  void clear_leader_host();
  const ::std::string& leader_host() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_leader_host(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_leader_host();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_leader_host();
  void set_allocated_leader_host(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_leader_host() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_leader_host(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_leader_host();

public:
  // string error_message = 5;
  void clear_error_message();
  const ::std::string& error_message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_error_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_error_message();
  void set_allocated_error_message(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_error_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_error_message();

public:
  // int32 leader_broker_id = 1;
  void clear_leader_broker_id();
  ::int32_t leader_broker_id() const;
  void set_leader_broker_id(::int32_t value);

private:
  ::int32_t _internal_leader_broker_id() const;
  void _internal_set_leader_broker_id(::int32_t value);

public:
  // int32 leader_port = 3;
  void clear_leader_port();
  ::int32_t leader_port() const;
  void set_leader_port(::int32_t value);

private:
  ::int32_t _internal_leader_port() const;
  void _internal_set_leader_port(::int32_t value);

public:
  // .streamit.v1.ErrorCode error_code = 4;
  void clear_error_code();
  ::streamit::v1::ErrorCode error_code() const;
  void set_error_code(::streamit::v1::ErrorCode value);

private:
  ::streamit::v1::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::streamit::v1::ErrorCode value);

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.FindLeaderResponse)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 63, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const FindLeaderResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr leader_host_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    ::int32_t leader_broker_id_;
    ::int32_t leader_port_;
    int error_code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FindLeaderResponse_class_data_;
// -------------------------------------------------------------------

class FindLeaderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.FindLeaderRequest) */ {
public:
  inline FindLeaderRequest() : FindLeaderRequest(nullptr) {
  }
  ~FindLeaderRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FindLeaderRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FindLeaderRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FindLeaderRequest(::google::protobuf::internal::ConstantInitialized);

  inline FindLeaderRequest(const FindLeaderRequest& from) : FindLeaderRequest(nullptr, from) {
  }
  inline FindLeaderRequest(FindLeaderRequest&& from) noexcept : FindLeaderRequest(nullptr, ::std::move(from)) {
  }
  inline FindLeaderRequest& operator=(const FindLeaderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FindLeaderRequest& operator=(FindLeaderRequest&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FindLeaderRequest& default_instance() {
    return *reinterpret_cast<const FindLeaderRequest*>(&_FindLeaderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(FindLeaderRequest& a, FindLeaderRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(FindLeaderRequest* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FindLeaderRequest* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FindLeaderRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FindLeaderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FindLeaderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FindLeaderRequest& from) {
    FindLeaderRequest::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FindLeaderRequest* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.FindLeaderRequest";
  }

protected:
  explicit FindLeaderRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FindLeaderRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FindLeaderRequest& from);
  FindLeaderRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FindLeaderRequest&& from) noexcept
      : FindLeaderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTopicFieldNumber = 1,
    kPartitionFieldNumber = 2,
  };
  // string topic = 1;
  void clear_topic();
  const ::std::string& topic() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_topic(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_topic();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_topic();
  void set_allocated_topic(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_topic() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_topic(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_topic();

public:
  // int32 partition = 2;
  void clear_partition();
  ::int32_t partition() const;
  void set_partition(::int32_t value);

private:
  ::int32_t _internal_partition() const;
  void _internal_set_partition(::int32_t value);

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.FindLeaderRequest)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 43, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const FindLeaderRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr topic_;
    ::int32_t partition_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FindLeaderRequest_class_data_;
// -------------------------------------------------------------------

class FetchRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.FetchRequest) */ {
public:
  inline FetchRequest() : FetchRequest(nullptr) {
  }
  ~FetchRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FetchRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FetchRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FetchRequest(::google::protobuf::internal::ConstantInitialized);

  inline FetchRequest(const FetchRequest& from) : FetchRequest(nullptr, from) {
  }
  inline FetchRequest(FetchRequest&& from) noexcept : FetchRequest(nullptr, ::std::move(from)) {
  }
  inline FetchRequest& operator=(const FetchRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FetchRequest& operator=(FetchRequest&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FetchRequest& default_instance() {
    return *reinterpret_cast<const FetchRequest*>(&_FetchRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(FetchRequest& a, FetchRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(FetchRequest* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FetchRequest* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FetchRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FetchRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FetchRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FetchRequest& from) {
    FetchRequest::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FetchRequest* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.FetchRequest";
  }

protected:
  explicit FetchRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FetchRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FetchRequest& from);
  FetchRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FetchRequest&& from) noexcept : FetchRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTopicFieldNumber = 1,
    kOffsetFieldNumber = 3,
    kPartitionFieldNumber = 2,
    kMaxBytesFieldNumber = 4,
  };
  // string topic = 1;
  void clear_topic();
  const ::std::string& topic() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_topic(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_topic();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_topic();
  void set_allocated_topic(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_topic() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_topic(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_topic();

public:
  // int64 offset = 3;
  void clear_offset();
  ::int64_t offset() const;
  void set_offset(::int64_t value);

private:
  ::int64_t _internal_offset() const;
  void _internal_set_offset(::int64_t value);

public:
  // int32 partition = 2;
  void clear_partition();
  ::int32_t partition() const;
  void set_partition(::int32_t value);

private:
  ::int32_t _internal_partition() const;
  void _internal_set_partition(::int32_t value);

public:
  // int32 max_bytes = 4;
  void clear_max_bytes();
  ::int32_t max_bytes() const;
  void set_max_bytes(::int32_t value);

private:
  ::int32_t _internal_max_bytes() const;
  void _internal_set_max_bytes(::int32_t value);

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.FetchRequest)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 38, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const FetchRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr topic_;
    ::int64_t offset_;
    ::int32_t partition_;
    ::int32_t max_bytes_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FetchRequest_class_data_;
// -------------------------------------------------------------------

class DescribeTopicRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.DescribeTopicRequest) */ {
public:
  inline DescribeTopicRequest() : DescribeTopicRequest(nullptr) {
  }
  ~DescribeTopicRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DescribeTopicRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DescribeTopicRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DescribeTopicRequest(::google::protobuf::internal::ConstantInitialized);

  inline DescribeTopicRequest(const DescribeTopicRequest& from) : DescribeTopicRequest(nullptr, from) {
  }
  inline DescribeTopicRequest(DescribeTopicRequest&& from) noexcept : DescribeTopicRequest(nullptr, ::std::move(from)) {
  }
  inline DescribeTopicRequest& operator=(const DescribeTopicRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DescribeTopicRequest& operator=(DescribeTopicRequest&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DescribeTopicRequest& default_instance() {
    return *reinterpret_cast<const DescribeTopicRequest*>(&_DescribeTopicRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(DescribeTopicRequest& a, DescribeTopicRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DescribeTopicRequest* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DescribeTopicRequest* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DescribeTopicRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DescribeTopicRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DescribeTopicRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DescribeTopicRequest& from) {
    DescribeTopicRequest::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DescribeTopicRequest* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.DescribeTopicRequest";
  }

protected:
  explicit DescribeTopicRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DescribeTopicRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DescribeTopicRequest& from);
  DescribeTopicRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DescribeTopicRequest&& from) noexcept
      : DescribeTopicRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTopicFieldNumber = 1,
  };
  // string topic = 1;
  void clear_topic();
  const ::std::string& topic() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_topic(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_topic();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_topic();
  void set_allocated_topic(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_topic() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_topic(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_topic();

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.DescribeTopicRequest)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 46, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const DescribeTopicRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr topic_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DescribeTopicRequest_class_data_;
// -------------------------------------------------------------------

class CreateTopicResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.CreateTopicResponse) */ {
public:
  inline CreateTopicResponse() : CreateTopicResponse(nullptr) {
  }
  ~CreateTopicResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateTopicResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateTopicResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateTopicResponse(::google::protobuf::internal::ConstantInitialized);

  inline CreateTopicResponse(const CreateTopicResponse& from) : CreateTopicResponse(nullptr, from) {
  }
  inline CreateTopicResponse(CreateTopicResponse&& from) noexcept : CreateTopicResponse(nullptr, ::std::move(from)) {
  }
  inline CreateTopicResponse& operator=(const CreateTopicResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateTopicResponse& operator=(CreateTopicResponse&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateTopicResponse& default_instance() {
    return *reinterpret_cast<const CreateTopicResponse*>(&_CreateTopicResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(CreateTopicResponse& a, CreateTopicResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateTopicResponse* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateTopicResponse* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateTopicResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateTopicResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateTopicResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateTopicResponse& from) {
    CreateTopicResponse::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateTopicResponse* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.CreateTopicResponse";
  }

protected:
  explicit CreateTopicResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CreateTopicResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CreateTopicResponse& from);
  CreateTopicResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CreateTopicResponse&& from) noexcept
      : CreateTopicResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
    kErrorCodeFieldNumber = 3,
  };
  // string error_message = 2;
  void clear_error_message();
  const ::std::string& error_message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_error_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_error_message();
  void set_allocated_error_message(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_error_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_error_message();

public:
  // bool success = 1;
  void clear_success();
  bool success() const;
  void set_success(bool value);

private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

public:
  // .streamit.v1.ErrorCode error_code = 3;
  void clear_error_code();
  ::streamit::v1::ErrorCode error_code() const;
  void set_error_code(::streamit::v1::ErrorCode value);

private:
  ::streamit::v1::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::streamit::v1::ErrorCode value);

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.CreateTopicResponse)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 53, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const CreateTopicResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    bool success_;
    int error_code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CreateTopicResponse_class_data_;
// -------------------------------------------------------------------

class CreateTopicRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.CreateTopicRequest) */ {
public:
  inline CreateTopicRequest() : CreateTopicRequest(nullptr) {
  }
  ~CreateTopicRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateTopicRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateTopicRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateTopicRequest(::google::protobuf::internal::ConstantInitialized);

  inline CreateTopicRequest(const CreateTopicRequest& from) : CreateTopicRequest(nullptr, from) {
  }
  inline CreateTopicRequest(CreateTopicRequest&& from) noexcept : CreateTopicRequest(nullptr, ::std::move(from)) {
  }
  inline CreateTopicRequest& operator=(const CreateTopicRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateTopicRequest& operator=(CreateTopicRequest&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateTopicRequest& default_instance() {
    return *reinterpret_cast<const CreateTopicRequest*>(&_CreateTopicRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(CreateTopicRequest& a, CreateTopicRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateTopicRequest* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateTopicRequest* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateTopicRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateTopicRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateTopicRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateTopicRequest& from) {
    CreateTopicRequest::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateTopicRequest* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.CreateTopicRequest";
  }

protected:
  explicit CreateTopicRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CreateTopicRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CreateTopicRequest& from);
  CreateTopicRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CreateTopicRequest&& from) noexcept
      : CreateTopicRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTopicFieldNumber = 1,
    kPartitionsFieldNumber = 2,
    kReplicationFactorFieldNumber = 3,
  };
  // string topic = 1;
  void clear_topic();
  const ::std::string& topic() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_topic(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_topic();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_topic();
  void set_allocated_topic(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_topic() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_topic(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_topic();

public:
  // int32 partitions = 2;
  void clear_partitions();
  ::int32_t partitions() const;
  void set_partitions(::int32_t value);

private:
  ::int32_t _internal_partitions() const;
  void _internal_set_partitions(::int32_t value);

public:
  // int32 replication_factor = 3;
  void clear_replication_factor();
  ::int32_t replication_factor() const;
  void set_replication_factor(::int32_t value);

private:
  ::int32_t _internal_replication_factor() const;
  void _internal_set_replication_factor(::int32_t value);

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.CreateTopicRequest)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 44, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const CreateTopicRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr topic_;
    ::int32_t partitions_;
    ::int32_t replication_factor_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CreateTopicRequest_class_data_;
// -------------------------------------------------------------------

class CommitOffsetResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.CommitOffsetResponse) */ {
public:
  inline CommitOffsetResponse() : CommitOffsetResponse(nullptr) {
  }
  ~CommitOffsetResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CommitOffsetResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CommitOffsetResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CommitOffsetResponse(::google::protobuf::internal::ConstantInitialized);

  inline CommitOffsetResponse(const CommitOffsetResponse& from) : CommitOffsetResponse(nullptr, from) {
  }
  inline CommitOffsetResponse(CommitOffsetResponse&& from) noexcept : CommitOffsetResponse(nullptr, ::std::move(from)) {
  }
  inline CommitOffsetResponse& operator=(const CommitOffsetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommitOffsetResponse& operator=(CommitOffsetResponse&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CommitOffsetResponse& default_instance() {
    return *reinterpret_cast<const CommitOffsetResponse*>(&_CommitOffsetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(CommitOffsetResponse& a, CommitOffsetResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CommitOffsetResponse* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommitOffsetResponse* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CommitOffsetResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CommitOffsetResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CommitOffsetResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CommitOffsetResponse& from) {
    CommitOffsetResponse::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CommitOffsetResponse* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.CommitOffsetResponse";
  }

protected:
  explicit CommitOffsetResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CommitOffsetResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CommitOffsetResponse& from);
  CommitOffsetResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CommitOffsetResponse&& from) noexcept
      : CommitOffsetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorMessageFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
  };
  // string error_message = 2;
  void clear_error_message();
  const ::std::string& error_message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_error_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_error_message();
  void set_allocated_error_message(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_error_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_error_message();

public:
  // .streamit.v1.ErrorCode error_code = 1;
  void clear_error_code();
  ::streamit::v1::ErrorCode error_code() const;
  void set_error_code(::streamit::v1::ErrorCode value);

private:
  ::streamit::v1::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::streamit::v1::ErrorCode value);

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.CommitOffsetResponse)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 54, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const CommitOffsetResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    int error_code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CommitOffsetResponse_class_data_;
// -------------------------------------------------------------------

class CommitOffsetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.CommitOffsetRequest) */ {
public:
  inline CommitOffsetRequest() : CommitOffsetRequest(nullptr) {
  }
  ~CommitOffsetRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CommitOffsetRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CommitOffsetRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CommitOffsetRequest(::google::protobuf::internal::ConstantInitialized);

  inline CommitOffsetRequest(const CommitOffsetRequest& from) : CommitOffsetRequest(nullptr, from) {
  }
  inline CommitOffsetRequest(CommitOffsetRequest&& from) noexcept : CommitOffsetRequest(nullptr, ::std::move(from)) {
  }
  inline CommitOffsetRequest& operator=(const CommitOffsetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommitOffsetRequest& operator=(CommitOffsetRequest&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CommitOffsetRequest& default_instance() {
    return *reinterpret_cast<const CommitOffsetRequest*>(&_CommitOffsetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(CommitOffsetRequest& a, CommitOffsetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CommitOffsetRequest* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommitOffsetRequest* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CommitOffsetRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CommitOffsetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CommitOffsetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CommitOffsetRequest& from) {
    CommitOffsetRequest::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CommitOffsetRequest* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.CommitOffsetRequest";
  }

protected:
  explicit CommitOffsetRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CommitOffsetRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CommitOffsetRequest& from);
  CommitOffsetRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CommitOffsetRequest&& from) noexcept
      : CommitOffsetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupFieldNumber = 1,
    kTopicFieldNumber = 2,
    kOffsetFieldNumber = 4,
    kPartitionFieldNumber = 3,
  };
  // string group = 1;
  void clear_group();
  const ::std::string& group() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_group(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_group();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_group();
  void set_allocated_group(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_group() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_group(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_group();

public:
  // string topic = 2;
  void clear_topic();
  const ::std::string& topic() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_topic(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_topic();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_topic();
  void set_allocated_topic(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_topic() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_topic(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_topic();

public:
  // int64 offset = 4;
  void clear_offset();
  ::int64_t offset() const;
  void set_offset(::int64_t value);

private:
  ::int64_t _internal_offset() const;
  void _internal_set_offset(::int64_t value);

public:
  // int32 partition = 3;
  void clear_partition();
  ::int32_t partition() const;
  void set_partition(::int32_t value);

private:
  ::int32_t _internal_partition() const;
  void _internal_set_partition(::int32_t value);

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.CommitOffsetRequest)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 50, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const CommitOffsetRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr group_;
    ::google::protobuf::internal::ArenaStringPtr topic_;
    ::int64_t offset_;
    ::int32_t partition_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CommitOffsetRequest_class_data_;
// -------------------------------------------------------------------

class TopicMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.TopicMetadata) */ {
public:
  inline TopicMetadata() : TopicMetadata(nullptr) {
  }
  ~TopicMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TopicMetadata* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TopicMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TopicMetadata(::google::protobuf::internal::ConstantInitialized);

  inline TopicMetadata(const TopicMetadata& from) : TopicMetadata(nullptr, from) {
  }
  inline TopicMetadata(TopicMetadata&& from) noexcept : TopicMetadata(nullptr, ::std::move(from)) {
  }
  inline TopicMetadata& operator=(const TopicMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline TopicMetadata& operator=(TopicMetadata&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TopicMetadata& default_instance() {
    return *reinterpret_cast<const TopicMetadata*>(&_TopicMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(TopicMetadata& a, TopicMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(TopicMetadata* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TopicMetadata* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TopicMetadata* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TopicMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TopicMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TopicMetadata& from) {
    TopicMetadata::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TopicMetadata* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.TopicMetadata";
  }

protected:
  explicit TopicMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TopicMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TopicMetadata& from);
  TopicMetadata(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TopicMetadata&& from) noexcept
      : TopicMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPartitionMetadataFieldNumber = 4,
    kTopicFieldNumber = 1,
    kPartitionsFieldNumber = 2,
    kReplicationFactorFieldNumber = 3,
  };
  // repeated .streamit.v1.PartitionMetadata partition_metadata = 4;
  int partition_metadata_size() const;

private:
  int _internal_partition_metadata_size() const;

public:
  void clear_partition_metadata();
  ::streamit::v1::PartitionMetadata* PROTOBUF_NONNULL mutable_partition_metadata(int index);
  ::google::protobuf::RepeatedPtrField<::streamit::v1::PartitionMetadata>* PROTOBUF_NONNULL
  mutable_partition_metadata();

private:
  const ::google::protobuf::RepeatedPtrField<::streamit::v1::PartitionMetadata>& _internal_partition_metadata() const;
  ::google::protobuf::RepeatedPtrField<::streamit::v1::PartitionMetadata>* PROTOBUF_NONNULL
  _internal_mutable_partition_metadata();

public:
  const ::streamit::v1::PartitionMetadata& partition_metadata(int index) const;
  ::streamit::v1::PartitionMetadata* PROTOBUF_NONNULL add_partition_metadata();
  const ::google::protobuf::RepeatedPtrField<::streamit::v1::PartitionMetadata>& partition_metadata() const;
  // string topic = 1;
  void clear_topic();
  const ::std::string& topic() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_topic(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_topic();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_topic();
  void set_allocated_topic(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_topic() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_topic(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_topic();

public:
  // int32 partitions = 2;
  void clear_partitions();
  ::int32_t partitions() const;
  void set_partitions(::int32_t value);

private:
  ::int32_t _internal_partitions() const;
  void _internal_set_partitions(::int32_t value);

public:
  // int32 replication_factor = 3;
  void clear_replication_factor();
  ::int32_t replication_factor() const;
  void set_replication_factor(::int32_t value);

private:
  ::int32_t _internal_replication_factor() const;
  void _internal_set_replication_factor(::int32_t value);

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.TopicMetadata)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 1, 39, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const TopicMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::streamit::v1::PartitionMetadata> partition_metadata_;
    ::google::protobuf::internal::ArenaStringPtr topic_;
    ::int32_t partitions_;
    ::int32_t replication_factor_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TopicMetadata_class_data_;
// -------------------------------------------------------------------

class ProduceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.ProduceRequest) */ {
public:
  inline ProduceRequest() : ProduceRequest(nullptr) {
  }
  ~ProduceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProduceRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProduceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProduceRequest(::google::protobuf::internal::ConstantInitialized);

  inline ProduceRequest(const ProduceRequest& from) : ProduceRequest(nullptr, from) {
  }
  inline ProduceRequest(ProduceRequest&& from) noexcept : ProduceRequest(nullptr, ::std::move(from)) {
  }
  inline ProduceRequest& operator=(const ProduceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProduceRequest& operator=(ProduceRequest&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProduceRequest& default_instance() {
    return *reinterpret_cast<const ProduceRequest*>(&_ProduceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ProduceRequest& a, ProduceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ProduceRequest* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProduceRequest* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProduceRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProduceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProduceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProduceRequest& from) {
    ProduceRequest::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProduceRequest* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.ProduceRequest";
  }

protected:
  explicit ProduceRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProduceRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProduceRequest& from);
  ProduceRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProduceRequest&& from) noexcept
      : ProduceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRecordsFieldNumber = 3,
    kTopicFieldNumber = 1,
    kProducerIdFieldNumber = 5,
    kPartitionFieldNumber = 2,
    kAckFieldNumber = 4,
    kSequenceFieldNumber = 6,
  };
  // repeated .streamit.v1.Record records = 3;
  int records_size() const;

private:
  int _internal_records_size() const;

public:
  void clear_records();
  ::streamit::v1::Record* PROTOBUF_NONNULL mutable_records(int index);
  ::google::protobuf::RepeatedPtrField<::streamit::v1::Record>* PROTOBUF_NONNULL mutable_records();

private:
  const ::google::protobuf::RepeatedPtrField<::streamit::v1::Record>& _internal_records() const;
  ::google::protobuf::RepeatedPtrField<::streamit::v1::Record>* PROTOBUF_NONNULL _internal_mutable_records();

public:
  const ::streamit::v1::Record& records(int index) const;
  ::streamit::v1::Record* PROTOBUF_NONNULL add_records();
  const ::google::protobuf::RepeatedPtrField<::streamit::v1::Record>& records() const;
  // string topic = 1;
  void clear_topic();
  const ::std::string& topic() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_topic(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_topic();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_topic();
  void set_allocated_topic(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_topic() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_topic(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_topic();

public:
  // string producer_id = 5;
  void clear_producer_id();
  const ::std::string& producer_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_producer_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_producer_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_producer_id();
  void set_allocated_producer_id(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_producer_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_producer_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_producer_id();

public:
  // int32 partition = 2;
  void clear_partition();
  ::int32_t partition() const;
  void set_partition(::int32_t value);

private:
  ::int32_t _internal_partition() const;
  void _internal_set_partition(::int32_t value);

public:
  // .streamit.v1.Ack ack = 4;
  void clear_ack();
  ::streamit::v1::Ack ack() const;
  void set_ack(::streamit::v1::Ack value);

private:
  ::streamit::v1::Ack _internal_ack() const;
  void _internal_set_ack(::streamit::v1::Ack value);

public:
  // int64 sequence = 6;
  void clear_sequence();
  ::int64_t sequence() const;
  void set_sequence(::int64_t value);

private:
  ::int64_t _internal_sequence() const;
  void _internal_set_sequence(::int64_t value);

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.ProduceRequest)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 1, 51, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const ProduceRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::streamit::v1::Record> records_;
    ::google::protobuf::internal::ArenaStringPtr topic_;
    ::google::protobuf::internal::ArenaStringPtr producer_id_;
    ::int32_t partition_;
    int ack_;
    ::int64_t sequence_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProduceRequest_class_data_;
// -------------------------------------------------------------------

class PollAssignmentResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.PollAssignmentResponse) */ {
public:
  inline PollAssignmentResponse() : PollAssignmentResponse(nullptr) {
  }
  ~PollAssignmentResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PollAssignmentResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PollAssignmentResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PollAssignmentResponse(::google::protobuf::internal::ConstantInitialized);

  inline PollAssignmentResponse(const PollAssignmentResponse& from) : PollAssignmentResponse(nullptr, from) {
  }
  inline PollAssignmentResponse(PollAssignmentResponse&& from) noexcept
      : PollAssignmentResponse(nullptr, ::std::move(from)) {
  }
  inline PollAssignmentResponse& operator=(const PollAssignmentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PollAssignmentResponse& operator=(PollAssignmentResponse&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PollAssignmentResponse& default_instance() {
    return *reinterpret_cast<const PollAssignmentResponse*>(&_PollAssignmentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(PollAssignmentResponse& a, PollAssignmentResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PollAssignmentResponse* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PollAssignmentResponse* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PollAssignmentResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PollAssignmentResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PollAssignmentResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PollAssignmentResponse& from) {
    PollAssignmentResponse::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PollAssignmentResponse* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.PollAssignmentResponse";
  }

protected:
  explicit PollAssignmentResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PollAssignmentResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PollAssignmentResponse& from);
  PollAssignmentResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PollAssignmentResponse&& from) noexcept
      : PollAssignmentResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Assignment = PollAssignmentResponse_Assignment;

  // accessors -------------------------------------------------------
  enum : int {
    kAssignmentsFieldNumber = 1,
    kErrorMessageFieldNumber = 4,
    kHeartbeatIntervalMsFieldNumber = 2,
    kErrorCodeFieldNumber = 3,
  };
  // repeated .streamit.v1.PollAssignmentResponse.Assignment assignments = 1;
  int assignments_size() const;

private:
  int _internal_assignments_size() const;

public:
  void clear_assignments();
  ::streamit::v1::PollAssignmentResponse_Assignment* PROTOBUF_NONNULL mutable_assignments(int index);
  ::google::protobuf::RepeatedPtrField<::streamit::v1::PollAssignmentResponse_Assignment>* PROTOBUF_NONNULL
  mutable_assignments();

private:
  const ::google::protobuf::RepeatedPtrField<::streamit::v1::PollAssignmentResponse_Assignment>& _internal_assignments()
      const;
  ::google::protobuf::RepeatedPtrField<::streamit::v1::PollAssignmentResponse_Assignment>* PROTOBUF_NONNULL
  _internal_mutable_assignments();

public:
  const ::streamit::v1::PollAssignmentResponse_Assignment& assignments(int index) const;
  ::streamit::v1::PollAssignmentResponse_Assignment* PROTOBUF_NONNULL add_assignments();
  const ::google::protobuf::RepeatedPtrField<::streamit::v1::PollAssignmentResponse_Assignment>& assignments() const;
  // string error_message = 4;
  void clear_error_message();
  const ::std::string& error_message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_error_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_error_message();
  void set_allocated_error_message(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_error_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_error_message();

public:
  // int32 heartbeat_interval_ms = 2;
  void clear_heartbeat_interval_ms();
  ::int32_t heartbeat_interval_ms() const;
  void set_heartbeat_interval_ms(::int32_t value);

private:
  ::int32_t _internal_heartbeat_interval_ms() const;
  void _internal_set_heartbeat_interval_ms(::int32_t value);

public:
  // .streamit.v1.ErrorCode error_code = 3;
  void clear_error_code();
  ::streamit::v1::ErrorCode error_code() const;
  void set_error_code(::streamit::v1::ErrorCode value);

private:
  ::streamit::v1::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::streamit::v1::ErrorCode value);

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.PollAssignmentResponse)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 1, 56, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const PollAssignmentResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::streamit::v1::PollAssignmentResponse_Assignment> assignments_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    ::int32_t heartbeat_interval_ms_;
    int error_code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PollAssignmentResponse_class_data_;
// -------------------------------------------------------------------

class FetchResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.FetchResponse) */ {
public:
  inline FetchResponse() : FetchResponse(nullptr) {
  }
  ~FetchResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FetchResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FetchResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FetchResponse(::google::protobuf::internal::ConstantInitialized);

  inline FetchResponse(const FetchResponse& from) : FetchResponse(nullptr, from) {
  }
  inline FetchResponse(FetchResponse&& from) noexcept : FetchResponse(nullptr, ::std::move(from)) {
  }
  inline FetchResponse& operator=(const FetchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FetchResponse& operator=(FetchResponse&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FetchResponse& default_instance() {
    return *reinterpret_cast<const FetchResponse*>(&_FetchResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(FetchResponse& a, FetchResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FetchResponse* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FetchResponse* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FetchResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FetchResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FetchResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FetchResponse& from) {
    FetchResponse::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FetchResponse* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.FetchResponse";
  }

protected:
  explicit FetchResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FetchResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FetchResponse& from);
  FetchResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FetchResponse&& from) noexcept
      : FetchResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBatchesFieldNumber = 2,
    kErrorMessageFieldNumber = 4,
    kLeaderHintFieldNumber = 6,
    kHighWatermarkFieldNumber = 1,
    kErrorCodeFieldNumber = 3,
    kRetryAfterMsFieldNumber = 5,
  };
  // repeated .streamit.v1.RecordBatch batches = 2;
  int batches_size() const;

private:
  int _internal_batches_size() const;

public:
  void clear_batches();
  ::streamit::v1::RecordBatch* PROTOBUF_NONNULL mutable_batches(int index);
  ::google::protobuf::RepeatedPtrField<::streamit::v1::RecordBatch>* PROTOBUF_NONNULL mutable_batches();

private:
  const ::google::protobuf::RepeatedPtrField<::streamit::v1::RecordBatch>& _internal_batches() const;
  ::google::protobuf::RepeatedPtrField<::streamit::v1::RecordBatch>* PROTOBUF_NONNULL _internal_mutable_batches();

public:
  const ::streamit::v1::RecordBatch& batches(int index) const;
  ::streamit::v1::RecordBatch* PROTOBUF_NONNULL add_batches();
  const ::google::protobuf::RepeatedPtrField<::streamit::v1::RecordBatch>& batches() const;
  // string error_message = 4;
  void clear_error_message();
  const ::std::string& error_message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_error_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_error_message();
  void set_allocated_error_message(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_error_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_error_message();

public:
  // string leader_hint = 6;
  void clear_leader_hint();
  const ::std::string& leader_hint() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_leader_hint(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_leader_hint();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_leader_hint();
  void set_allocated_leader_hint(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_leader_hint() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_leader_hint(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_leader_hint();

public:
  // int64 high_watermark = 1;
  void clear_high_watermark();
  ::int64_t high_watermark() const;
  void set_high_watermark(::int64_t value);

private:
  ::int64_t _internal_high_watermark() const;
  void _internal_set_high_watermark(::int64_t value);

public:
  // .streamit.v1.ErrorCode error_code = 3;
  void clear_error_code();
  ::streamit::v1::ErrorCode error_code() const;
  void set_error_code(::streamit::v1::ErrorCode value);

private:
  ::streamit::v1::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::streamit::v1::ErrorCode value);

public:
  // int32 retry_after_ms = 5;
  void clear_retry_after_ms();
  ::int32_t retry_after_ms() const;
  void set_retry_after_ms(::int32_t value);

private:
  ::int32_t _internal_retry_after_ms() const;
  void _internal_set_retry_after_ms(::int32_t value);

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.FetchResponse)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 1, 58, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const FetchResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::streamit::v1::RecordBatch> batches_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    ::google::protobuf::internal::ArenaStringPtr leader_hint_;
    ::int64_t high_watermark_;
    int error_code_;
    ::int32_t retry_after_ms_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FetchResponse_class_data_;
// -------------------------------------------------------------------

class DescribeTopicResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:streamit.v1.DescribeTopicResponse) */ {
public:
  inline DescribeTopicResponse() : DescribeTopicResponse(nullptr) {
  }
  ~DescribeTopicResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DescribeTopicResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DescribeTopicResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DescribeTopicResponse(::google::protobuf::internal::ConstantInitialized);

  inline DescribeTopicResponse(const DescribeTopicResponse& from) : DescribeTopicResponse(nullptr, from) {
  }
  inline DescribeTopicResponse(DescribeTopicResponse&& from) noexcept
      : DescribeTopicResponse(nullptr, ::std::move(from)) {
  }
  inline DescribeTopicResponse& operator=(const DescribeTopicResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DescribeTopicResponse& operator=(DescribeTopicResponse&& from) noexcept {
    if (this == &from)
      return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
        ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DescribeTopicResponse& default_instance() {
    return *reinterpret_cast<const DescribeTopicResponse*>(&_DescribeTopicResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(DescribeTopicResponse& a, DescribeTopicResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DescribeTopicResponse* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DescribeTopicResponse* PROTOBUF_NONNULL other) {
    if (other == this)
      return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DescribeTopicResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DescribeTopicResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DescribeTopicResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DescribeTopicResponse& from) {
    DescribeTopicResponse::MergeImpl(*this, from);
  }

private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg);

public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

public:
  ::size_t ByteSizeLong() const {
    return ByteSizeLong(*this);
  }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target, ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else  // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL
  _InternalSerialize(::uint8_t* PROTOBUF_NONNULL target,
                     ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
#endif // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const {
    return _impl_._cached_size_.Get();
  }

private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DescribeTopicResponse* PROTOBUF_NONNULL other);

private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "streamit.v1.DescribeTopicResponse";
  }

protected:
  explicit DescribeTopicResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DescribeTopicResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DescribeTopicResponse& from);
  DescribeTopicResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DescribeTopicResponse&& from) noexcept
      : DescribeTopicResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                              ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorMessageFieldNumber = 3,
    kMetadataFieldNumber = 1,
    kErrorCodeFieldNumber = 2,
  };
  // string error_message = 3;
  void clear_error_message();
  const ::std::string& error_message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_error_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_error_message();
  void set_allocated_error_message(::std::string* PROTOBUF_NULLABLE value);

private:
  const ::std::string& _internal_error_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_error_message();

public:
  // .streamit.v1.TopicMetadata metadata = 1;
  bool has_metadata() const;
  void clear_metadata();
  const ::streamit::v1::TopicMetadata& metadata() const;
  [[nodiscard]] ::streamit::v1::TopicMetadata* PROTOBUF_NULLABLE release_metadata();
  ::streamit::v1::TopicMetadata* PROTOBUF_NONNULL mutable_metadata();
  void set_allocated_metadata(::streamit::v1::TopicMetadata* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_metadata(::streamit::v1::TopicMetadata* PROTOBUF_NULLABLE value);
  ::streamit::v1::TopicMetadata* PROTOBUF_NULLABLE unsafe_arena_release_metadata();

private:
  const ::streamit::v1::TopicMetadata& _internal_metadata() const;
  ::streamit::v1::TopicMetadata* PROTOBUF_NONNULL _internal_mutable_metadata();

public:
  // .streamit.v1.ErrorCode error_code = 2;
  void clear_error_code();
  ::streamit::v1::ErrorCode error_code() const;
  void set_error_code(::streamit::v1::ErrorCode value);

private:
  ::streamit::v1::ErrorCode _internal_error_code() const;
  void _internal_set_error_code(::streamit::v1::ErrorCode value);

public:
  // @@protoc_insertion_point(class_scope:streamit.v1.DescribeTopicResponse)
private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 1, 55, 2> _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
                          const DescribeTopicResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    ::streamit::v1::TopicMetadata* PROTOBUF_NULLABLE metadata_;
    int error_code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_proto_2fstreamit_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DescribeTopicResponse_class_data_;

// ===================================================================

// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif // __GNUC__
// -------------------------------------------------------------------

// Record

// bytes key = 1;
inline void Record::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& Record::key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.Record.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Record::set_key(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.Record.key)
}
inline ::std::string* PROTOBUF_NONNULL Record::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:streamit.v1.Record.key)
  return _s;
}
inline const ::std::string& Record::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void Record::_internal_set_key(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.key_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Record::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.key_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Record::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.Record.key)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.key_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.key_.Set("", GetArena());
  }
  return released;
}
inline void Record::set_allocated_key(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.Record.key)
}

// bytes value = 2;
inline void Record::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& Record::value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.Record.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Record::set_value(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.value_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.Record.value)
}
inline ::std::string* PROTOBUF_NONNULL Record::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:streamit.v1.Record.value)
  return _s;
}
inline const ::std::string& Record::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void Record::_internal_set_value(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.value_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Record::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.value_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Record::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.Record.value)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.value_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.value_.Set("", GetArena());
  }
  return released;
}
inline void Record::set_allocated_value(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.Record.value)
}

// int64 timestamp_ms = 3;
inline void Record::clear_timestamp_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ms_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int64_t Record::timestamp_ms() const {
  // @@protoc_insertion_point(field_get:streamit.v1.Record.timestamp_ms)
  return _internal_timestamp_ms();
}
inline void Record::set_timestamp_ms(::int64_t value) {
  _internal_set_timestamp_ms(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:streamit.v1.Record.timestamp_ms)
}
inline ::int64_t Record::_internal_timestamp_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_ms_;
}
inline void Record::_internal_set_timestamp_ms(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ms_ = value;
}

// -------------------------------------------------------------------

// RecordBatch

// int64 base_offset = 1;
inline void RecordBatch::clear_base_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_offset_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int64_t RecordBatch::base_offset() const {
  // @@protoc_insertion_point(field_get:streamit.v1.RecordBatch.base_offset)
  return _internal_base_offset();
}
inline void RecordBatch::set_base_offset(::int64_t value) {
  _internal_set_base_offset(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:streamit.v1.RecordBatch.base_offset)
}
inline ::int64_t RecordBatch::_internal_base_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.base_offset_;
}
inline void RecordBatch::_internal_set_base_offset(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_offset_ = value;
}

// bytes payload = 2;
inline void RecordBatch::clear_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payload_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& RecordBatch::payload() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.RecordBatch.payload)
  return _internal_payload();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RecordBatch::set_payload(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.payload_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.RecordBatch.payload)
}
inline ::std::string* PROTOBUF_NONNULL RecordBatch::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:streamit.v1.RecordBatch.payload)
  return _s;
}
inline const ::std::string& RecordBatch::_internal_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payload_.Get();
}
inline void RecordBatch::_internal_set_payload(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.payload_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RecordBatch::_internal_mutable_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.payload_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RecordBatch::release_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.RecordBatch.payload)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.payload_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.payload_.Set("", GetArena());
  }
  return released;
}
inline void RecordBatch::set_allocated_payload(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.payload_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.payload_.IsDefault()) {
    _impl_.payload_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.RecordBatch.payload)
}

// uint32 crc32 = 3;
inline void RecordBatch::clear_crc32() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crc32_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::uint32_t RecordBatch::crc32() const {
  // @@protoc_insertion_point(field_get:streamit.v1.RecordBatch.crc32)
  return _internal_crc32();
}
inline void RecordBatch::set_crc32(::uint32_t value) {
  _internal_set_crc32(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:streamit.v1.RecordBatch.crc32)
}
inline ::uint32_t RecordBatch::_internal_crc32() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.crc32_;
}
inline void RecordBatch::_internal_set_crc32(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.crc32_ = value;
}

// -------------------------------------------------------------------

// ProduceRequest

// string topic = 1;
inline void ProduceRequest::clear_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topic_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ProduceRequest::topic() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.ProduceRequest.topic)
  return _internal_topic();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProduceRequest::set_topic(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.topic_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.ProduceRequest.topic)
}
inline ::std::string* PROTOBUF_NONNULL ProduceRequest::mutable_topic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_topic();
  // @@protoc_insertion_point(field_mutable:streamit.v1.ProduceRequest.topic)
  return _s;
}
inline const ::std::string& ProduceRequest::_internal_topic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topic_.Get();
}
inline void ProduceRequest::_internal_set_topic(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.topic_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProduceRequest::_internal_mutable_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.topic_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProduceRequest::release_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.ProduceRequest.topic)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.topic_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.topic_.Set("", GetArena());
  }
  return released;
}
inline void ProduceRequest::set_allocated_topic(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.topic_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.topic_.IsDefault()) {
    _impl_.topic_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.ProduceRequest.topic)
}

// int32 partition = 2;
inline void ProduceRequest::clear_partition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partition_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int32_t ProduceRequest::partition() const {
  // @@protoc_insertion_point(field_get:streamit.v1.ProduceRequest.partition)
  return _internal_partition();
}
inline void ProduceRequest::set_partition(::int32_t value) {
  _internal_set_partition(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:streamit.v1.ProduceRequest.partition)
}
inline ::int32_t ProduceRequest::_internal_partition() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partition_;
}
inline void ProduceRequest::_internal_set_partition(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partition_ = value;
}

// repeated .streamit.v1.Record records = 3;
inline int ProduceRequest::_internal_records_size() const {
  return _internal_records().size();
}
inline int ProduceRequest::records_size() const {
  return _internal_records_size();
}
inline void ProduceRequest::clear_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.records_.Clear();
}
inline ::streamit::v1::Record* PROTOBUF_NONNULL ProduceRequest::mutable_records(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:streamit.v1.ProduceRequest.records)
  return _internal_mutable_records()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::streamit::v1::Record>* PROTOBUF_NONNULL ProduceRequest::mutable_records()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:streamit.v1.ProduceRequest.records)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_records();
}
inline const ::streamit::v1::Record& ProduceRequest::records(int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.ProduceRequest.records)
  return _internal_records().Get(index);
}
inline ::streamit::v1::Record* PROTOBUF_NONNULL ProduceRequest::add_records() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::streamit::v1::Record* _add = _internal_mutable_records()->Add();
  // @@protoc_insertion_point(field_add:streamit.v1.ProduceRequest.records)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::streamit::v1::Record>& ProduceRequest::records() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:streamit.v1.ProduceRequest.records)
  return _internal_records();
}
inline const ::google::protobuf::RepeatedPtrField<::streamit::v1::Record>& ProduceRequest::_internal_records() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.records_;
}
inline ::google::protobuf::RepeatedPtrField<::streamit::v1::Record>* PROTOBUF_NONNULL
ProduceRequest::_internal_mutable_records() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.records_;
}

// .streamit.v1.Ack ack = 4;
inline void ProduceRequest::clear_ack() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::streamit::v1::Ack ProduceRequest::ack() const {
  // @@protoc_insertion_point(field_get:streamit.v1.ProduceRequest.ack)
  return _internal_ack();
}
inline void ProduceRequest::set_ack(::streamit::v1::Ack value) {
  _internal_set_ack(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:streamit.v1.ProduceRequest.ack)
}
inline ::streamit::v1::Ack ProduceRequest::_internal_ack() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::streamit::v1::Ack>(_impl_.ack_);
}
inline void ProduceRequest::_internal_set_ack(::streamit::v1::Ack value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_ = value;
}

// string producer_id = 5;
inline void ProduceRequest::clear_producer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.producer_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& ProduceRequest::producer_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.ProduceRequest.producer_id)
  return _internal_producer_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProduceRequest::set_producer_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.producer_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.ProduceRequest.producer_id)
}
inline ::std::string* PROTOBUF_NONNULL ProduceRequest::mutable_producer_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_producer_id();
  // @@protoc_insertion_point(field_mutable:streamit.v1.ProduceRequest.producer_id)
  return _s;
}
inline const ::std::string& ProduceRequest::_internal_producer_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.producer_id_.Get();
}
inline void ProduceRequest::_internal_set_producer_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.producer_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProduceRequest::_internal_mutable_producer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.producer_id_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProduceRequest::release_producer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.ProduceRequest.producer_id)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.producer_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.producer_id_.Set("", GetArena());
  }
  return released;
}
inline void ProduceRequest::set_allocated_producer_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.producer_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.producer_id_.IsDefault()) {
    _impl_.producer_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.ProduceRequest.producer_id)
}

// int64 sequence = 6;
inline void ProduceRequest::clear_sequence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequence_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::int64_t ProduceRequest::sequence() const {
  // @@protoc_insertion_point(field_get:streamit.v1.ProduceRequest.sequence)
  return _internal_sequence();
}
inline void ProduceRequest::set_sequence(::int64_t value) {
  _internal_set_sequence(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:streamit.v1.ProduceRequest.sequence)
}
inline ::int64_t ProduceRequest::_internal_sequence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sequence_;
}
inline void ProduceRequest::_internal_set_sequence(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequence_ = value;
}

// -------------------------------------------------------------------

// ProduceResponse

// int64 base_offset = 1;
inline void ProduceResponse::clear_base_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_offset_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int64_t ProduceResponse::base_offset() const {
  // @@protoc_insertion_point(field_get:streamit.v1.ProduceResponse.base_offset)
  return _internal_base_offset();
}
inline void ProduceResponse::set_base_offset(::int64_t value) {
  _internal_set_base_offset(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:streamit.v1.ProduceResponse.base_offset)
}
inline ::int64_t ProduceResponse::_internal_base_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.base_offset_;
}
inline void ProduceResponse::_internal_set_base_offset(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_offset_ = value;
}

// .streamit.v1.ErrorCode error_code = 2;
inline void ProduceResponse::clear_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::streamit::v1::ErrorCode ProduceResponse::error_code() const {
  // @@protoc_insertion_point(field_get:streamit.v1.ProduceResponse.error_code)
  return _internal_error_code();
}
inline void ProduceResponse::set_error_code(::streamit::v1::ErrorCode value) {
  _internal_set_error_code(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:streamit.v1.ProduceResponse.error_code)
}
inline ::streamit::v1::ErrorCode ProduceResponse::_internal_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::streamit::v1::ErrorCode>(_impl_.error_code_);
}
inline void ProduceResponse::_internal_set_error_code(::streamit::v1::ErrorCode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = value;
}

// string error_message = 3;
inline void ProduceResponse::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ProduceResponse::error_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.ProduceResponse.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProduceResponse::set_error_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.ProduceResponse.error_message)
}
inline ::std::string* PROTOBUF_NONNULL ProduceResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:streamit.v1.ProduceResponse.error_message)
  return _s;
}
inline const ::std::string& ProduceResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void ProduceResponse::_internal_set_error_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.error_message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProduceResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.error_message_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProduceResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.ProduceResponse.error_message)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.error_message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.error_message_.Set("", GetArena());
  }
  return released;
}
inline void ProduceResponse::set_allocated_error_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.ProduceResponse.error_message)
}

// int32 retry_after_ms = 4;
inline void ProduceResponse::clear_retry_after_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.retry_after_ms_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::int32_t ProduceResponse::retry_after_ms() const {
  // @@protoc_insertion_point(field_get:streamit.v1.ProduceResponse.retry_after_ms)
  return _internal_retry_after_ms();
}
inline void ProduceResponse::set_retry_after_ms(::int32_t value) {
  _internal_set_retry_after_ms(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:streamit.v1.ProduceResponse.retry_after_ms)
}
inline ::int32_t ProduceResponse::_internal_retry_after_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.retry_after_ms_;
}
inline void ProduceResponse::_internal_set_retry_after_ms(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.retry_after_ms_ = value;
}

// string leader_hint = 5;
inline void ProduceResponse::clear_leader_hint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leader_hint_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& ProduceResponse::leader_hint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.ProduceResponse.leader_hint)
  return _internal_leader_hint();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProduceResponse::set_leader_hint(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.leader_hint_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.ProduceResponse.leader_hint)
}
inline ::std::string* PROTOBUF_NONNULL ProduceResponse::mutable_leader_hint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_leader_hint();
  // @@protoc_insertion_point(field_mutable:streamit.v1.ProduceResponse.leader_hint)
  return _s;
}
inline const ::std::string& ProduceResponse::_internal_leader_hint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.leader_hint_.Get();
}
inline void ProduceResponse::_internal_set_leader_hint(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.leader_hint_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProduceResponse::_internal_mutable_leader_hint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.leader_hint_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProduceResponse::release_leader_hint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.ProduceResponse.leader_hint)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.leader_hint_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.leader_hint_.Set("", GetArena());
  }
  return released;
}
inline void ProduceResponse::set_allocated_leader_hint(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.leader_hint_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.leader_hint_.IsDefault()) {
    _impl_.leader_hint_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.ProduceResponse.leader_hint)
}

// -------------------------------------------------------------------

// FetchRequest

// string topic = 1;
inline void FetchRequest::clear_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topic_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& FetchRequest::topic() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.FetchRequest.topic)
  return _internal_topic();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FetchRequest::set_topic(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.topic_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.FetchRequest.topic)
}
inline ::std::string* PROTOBUF_NONNULL FetchRequest::mutable_topic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_topic();
  // @@protoc_insertion_point(field_mutable:streamit.v1.FetchRequest.topic)
  return _s;
}
inline const ::std::string& FetchRequest::_internal_topic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topic_.Get();
}
inline void FetchRequest::_internal_set_topic(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.topic_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FetchRequest::_internal_mutable_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.topic_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FetchRequest::release_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.FetchRequest.topic)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.topic_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.topic_.Set("", GetArena());
  }
  return released;
}
inline void FetchRequest::set_allocated_topic(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.topic_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.topic_.IsDefault()) {
    _impl_.topic_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.FetchRequest.topic)
}

// int32 partition = 2;
inline void FetchRequest::clear_partition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partition_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int32_t FetchRequest::partition() const {
  // @@protoc_insertion_point(field_get:streamit.v1.FetchRequest.partition)
  return _internal_partition();
}
inline void FetchRequest::set_partition(::int32_t value) {
  _internal_set_partition(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:streamit.v1.FetchRequest.partition)
}
inline ::int32_t FetchRequest::_internal_partition() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partition_;
}
inline void FetchRequest::_internal_set_partition(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partition_ = value;
}

// int64 offset = 3;
inline void FetchRequest::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int64_t FetchRequest::offset() const {
  // @@protoc_insertion_point(field_get:streamit.v1.FetchRequest.offset)
  return _internal_offset();
}
inline void FetchRequest::set_offset(::int64_t value) {
  _internal_set_offset(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:streamit.v1.FetchRequest.offset)
}
inline ::int64_t FetchRequest::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void FetchRequest::_internal_set_offset(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// int32 max_bytes = 4;
inline void FetchRequest::clear_max_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_bytes_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::int32_t FetchRequest::max_bytes() const {
  // @@protoc_insertion_point(field_get:streamit.v1.FetchRequest.max_bytes)
  return _internal_max_bytes();
}
inline void FetchRequest::set_max_bytes(::int32_t value) {
  _internal_set_max_bytes(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:streamit.v1.FetchRequest.max_bytes)
}
inline ::int32_t FetchRequest::_internal_max_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_bytes_;
}
inline void FetchRequest::_internal_set_max_bytes(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_bytes_ = value;
}

// -------------------------------------------------------------------

// FetchResponse

// int64 high_watermark = 1;
inline void FetchResponse::clear_high_watermark() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.high_watermark_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int64_t FetchResponse::high_watermark() const {
  // @@protoc_insertion_point(field_get:streamit.v1.FetchResponse.high_watermark)
  return _internal_high_watermark();
}
inline void FetchResponse::set_high_watermark(::int64_t value) {
  _internal_set_high_watermark(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:streamit.v1.FetchResponse.high_watermark)
}
inline ::int64_t FetchResponse::_internal_high_watermark() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.high_watermark_;
}
inline void FetchResponse::_internal_set_high_watermark(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.high_watermark_ = value;
}

// repeated .streamit.v1.RecordBatch batches = 2;
inline int FetchResponse::_internal_batches_size() const {
  return _internal_batches().size();
}
inline int FetchResponse::batches_size() const {
  return _internal_batches_size();
}
inline void FetchResponse::clear_batches() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.batches_.Clear();
}
inline ::streamit::v1::RecordBatch* PROTOBUF_NONNULL FetchResponse::mutable_batches(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:streamit.v1.FetchResponse.batches)
  return _internal_mutable_batches()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::streamit::v1::RecordBatch>* PROTOBUF_NONNULL
FetchResponse::mutable_batches() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:streamit.v1.FetchResponse.batches)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_batches();
}
inline const ::streamit::v1::RecordBatch& FetchResponse::batches(int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.FetchResponse.batches)
  return _internal_batches().Get(index);
}
inline ::streamit::v1::RecordBatch* PROTOBUF_NONNULL FetchResponse::add_batches() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::streamit::v1::RecordBatch* _add = _internal_mutable_batches()->Add();
  // @@protoc_insertion_point(field_add:streamit.v1.FetchResponse.batches)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::streamit::v1::RecordBatch>& FetchResponse::batches() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:streamit.v1.FetchResponse.batches)
  return _internal_batches();
}
inline const ::google::protobuf::RepeatedPtrField<::streamit::v1::RecordBatch>& FetchResponse::_internal_batches()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.batches_;
}
inline ::google::protobuf::RepeatedPtrField<::streamit::v1::RecordBatch>* PROTOBUF_NONNULL
FetchResponse::_internal_mutable_batches() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.batches_;
}

// .streamit.v1.ErrorCode error_code = 3;
inline void FetchResponse::clear_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::streamit::v1::ErrorCode FetchResponse::error_code() const {
  // @@protoc_insertion_point(field_get:streamit.v1.FetchResponse.error_code)
  return _internal_error_code();
}
inline void FetchResponse::set_error_code(::streamit::v1::ErrorCode value) {
  _internal_set_error_code(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:streamit.v1.FetchResponse.error_code)
}
inline ::streamit::v1::ErrorCode FetchResponse::_internal_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::streamit::v1::ErrorCode>(_impl_.error_code_);
}
inline void FetchResponse::_internal_set_error_code(::streamit::v1::ErrorCode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = value;
}

// string error_message = 4;
inline void FetchResponse::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& FetchResponse::error_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.FetchResponse.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FetchResponse::set_error_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.FetchResponse.error_message)
}
inline ::std::string* PROTOBUF_NONNULL FetchResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:streamit.v1.FetchResponse.error_message)
  return _s;
}
inline const ::std::string& FetchResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void FetchResponse::_internal_set_error_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.error_message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FetchResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.error_message_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FetchResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.FetchResponse.error_message)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.error_message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.error_message_.Set("", GetArena());
  }
  return released;
}
inline void FetchResponse::set_allocated_error_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.FetchResponse.error_message)
}

// int32 retry_after_ms = 5;
inline void FetchResponse::clear_retry_after_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.retry_after_ms_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::int32_t FetchResponse::retry_after_ms() const {
  // @@protoc_insertion_point(field_get:streamit.v1.FetchResponse.retry_after_ms)
  return _internal_retry_after_ms();
}
inline void FetchResponse::set_retry_after_ms(::int32_t value) {
  _internal_set_retry_after_ms(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:streamit.v1.FetchResponse.retry_after_ms)
}
inline ::int32_t FetchResponse::_internal_retry_after_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.retry_after_ms_;
}
inline void FetchResponse::_internal_set_retry_after_ms(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.retry_after_ms_ = value;
}

// string leader_hint = 6;
inline void FetchResponse::clear_leader_hint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leader_hint_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& FetchResponse::leader_hint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.FetchResponse.leader_hint)
  return _internal_leader_hint();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FetchResponse::set_leader_hint(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.leader_hint_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.FetchResponse.leader_hint)
}
inline ::std::string* PROTOBUF_NONNULL FetchResponse::mutable_leader_hint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_leader_hint();
  // @@protoc_insertion_point(field_mutable:streamit.v1.FetchResponse.leader_hint)
  return _s;
}
inline const ::std::string& FetchResponse::_internal_leader_hint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.leader_hint_.Get();
}
inline void FetchResponse::_internal_set_leader_hint(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.leader_hint_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FetchResponse::_internal_mutable_leader_hint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.leader_hint_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FetchResponse::release_leader_hint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.FetchResponse.leader_hint)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.leader_hint_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.leader_hint_.Set("", GetArena());
  }
  return released;
}
inline void FetchResponse::set_allocated_leader_hint(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.leader_hint_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.leader_hint_.IsDefault()) {
    _impl_.leader_hint_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.FetchResponse.leader_hint)
}

// -------------------------------------------------------------------

// CommitOffsetRequest

// string group = 1;
inline void CommitOffsetRequest::clear_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& CommitOffsetRequest::group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.CommitOffsetRequest.group)
  return _internal_group();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CommitOffsetRequest::set_group(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.group_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.CommitOffsetRequest.group)
}
inline ::std::string* PROTOBUF_NONNULL CommitOffsetRequest::mutable_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_group();
  // @@protoc_insertion_point(field_mutable:streamit.v1.CommitOffsetRequest.group)
  return _s;
}
inline const ::std::string& CommitOffsetRequest::_internal_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_.Get();
}
inline void CommitOffsetRequest::_internal_set_group(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.group_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CommitOffsetRequest::_internal_mutable_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.group_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CommitOffsetRequest::release_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.CommitOffsetRequest.group)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.group_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.group_.Set("", GetArena());
  }
  return released;
}
inline void CommitOffsetRequest::set_allocated_group(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.group_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_.IsDefault()) {
    _impl_.group_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.CommitOffsetRequest.group)
}

// string topic = 2;
inline void CommitOffsetRequest::clear_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topic_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& CommitOffsetRequest::topic() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.CommitOffsetRequest.topic)
  return _internal_topic();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CommitOffsetRequest::set_topic(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.topic_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.CommitOffsetRequest.topic)
}
inline ::std::string* PROTOBUF_NONNULL CommitOffsetRequest::mutable_topic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_topic();
  // @@protoc_insertion_point(field_mutable:streamit.v1.CommitOffsetRequest.topic)
  return _s;
}
inline const ::std::string& CommitOffsetRequest::_internal_topic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topic_.Get();
}
inline void CommitOffsetRequest::_internal_set_topic(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.topic_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CommitOffsetRequest::_internal_mutable_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.topic_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CommitOffsetRequest::release_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.CommitOffsetRequest.topic)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.topic_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.topic_.Set("", GetArena());
  }
  return released;
}
inline void CommitOffsetRequest::set_allocated_topic(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.topic_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.topic_.IsDefault()) {
    _impl_.topic_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.CommitOffsetRequest.topic)
}

// int32 partition = 3;
inline void CommitOffsetRequest::clear_partition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partition_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::int32_t CommitOffsetRequest::partition() const {
  // @@protoc_insertion_point(field_get:streamit.v1.CommitOffsetRequest.partition)
  return _internal_partition();
}
inline void CommitOffsetRequest::set_partition(::int32_t value) {
  _internal_set_partition(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:streamit.v1.CommitOffsetRequest.partition)
}
inline ::int32_t CommitOffsetRequest::_internal_partition() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partition_;
}
inline void CommitOffsetRequest::_internal_set_partition(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partition_ = value;
}

// int64 offset = 4;
inline void CommitOffsetRequest::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int64_t CommitOffsetRequest::offset() const {
  // @@protoc_insertion_point(field_get:streamit.v1.CommitOffsetRequest.offset)
  return _internal_offset();
}
inline void CommitOffsetRequest::set_offset(::int64_t value) {
  _internal_set_offset(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:streamit.v1.CommitOffsetRequest.offset)
}
inline ::int64_t CommitOffsetRequest::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void CommitOffsetRequest::_internal_set_offset(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// -------------------------------------------------------------------

// CommitOffsetResponse

// .streamit.v1.ErrorCode error_code = 1;
inline void CommitOffsetResponse::clear_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::streamit::v1::ErrorCode CommitOffsetResponse::error_code() const {
  // @@protoc_insertion_point(field_get:streamit.v1.CommitOffsetResponse.error_code)
  return _internal_error_code();
}
inline void CommitOffsetResponse::set_error_code(::streamit::v1::ErrorCode value) {
  _internal_set_error_code(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:streamit.v1.CommitOffsetResponse.error_code)
}
inline ::streamit::v1::ErrorCode CommitOffsetResponse::_internal_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::streamit::v1::ErrorCode>(_impl_.error_code_);
}
inline void CommitOffsetResponse::_internal_set_error_code(::streamit::v1::ErrorCode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = value;
}

// string error_message = 2;
inline void CommitOffsetResponse::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& CommitOffsetResponse::error_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.CommitOffsetResponse.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CommitOffsetResponse::set_error_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.CommitOffsetResponse.error_message)
}
inline ::std::string* PROTOBUF_NONNULL CommitOffsetResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:streamit.v1.CommitOffsetResponse.error_message)
  return _s;
}
inline const ::std::string& CommitOffsetResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void CommitOffsetResponse::_internal_set_error_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.error_message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CommitOffsetResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.error_message_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CommitOffsetResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.CommitOffsetResponse.error_message)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.error_message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.error_message_.Set("", GetArena());
  }
  return released;
}
inline void CommitOffsetResponse::set_allocated_error_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.CommitOffsetResponse.error_message)
}

// -------------------------------------------------------------------

// PollAssignmentRequest

// string group = 1;
inline void PollAssignmentRequest::clear_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PollAssignmentRequest::group() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.PollAssignmentRequest.group)
  return _internal_group();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PollAssignmentRequest::set_group(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.group_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.PollAssignmentRequest.group)
}
inline ::std::string* PROTOBUF_NONNULL PollAssignmentRequest::mutable_group() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_group();
  // @@protoc_insertion_point(field_mutable:streamit.v1.PollAssignmentRequest.group)
  return _s;
}
inline const ::std::string& PollAssignmentRequest::_internal_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_.Get();
}
inline void PollAssignmentRequest::_internal_set_group(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.group_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PollAssignmentRequest::_internal_mutable_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.group_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PollAssignmentRequest::release_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.PollAssignmentRequest.group)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.group_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.group_.Set("", GetArena());
  }
  return released;
}
inline void PollAssignmentRequest::set_allocated_group(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.group_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_.IsDefault()) {
    _impl_.group_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.PollAssignmentRequest.group)
}

// string member_id = 2;
inline void PollAssignmentRequest::clear_member_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.member_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& PollAssignmentRequest::member_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.PollAssignmentRequest.member_id)
  return _internal_member_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PollAssignmentRequest::set_member_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.member_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.PollAssignmentRequest.member_id)
}
inline ::std::string* PROTOBUF_NONNULL PollAssignmentRequest::mutable_member_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_member_id();
  // @@protoc_insertion_point(field_mutable:streamit.v1.PollAssignmentRequest.member_id)
  return _s;
}
inline const ::std::string& PollAssignmentRequest::_internal_member_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.member_id_.Get();
}
inline void PollAssignmentRequest::_internal_set_member_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.member_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PollAssignmentRequest::_internal_mutable_member_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.member_id_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PollAssignmentRequest::release_member_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.PollAssignmentRequest.member_id)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.member_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.member_id_.Set("", GetArena());
  }
  return released;
}
inline void PollAssignmentRequest::set_allocated_member_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.member_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.member_id_.IsDefault()) {
    _impl_.member_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.PollAssignmentRequest.member_id)
}

// repeated string topics = 3;
inline int PollAssignmentRequest::_internal_topics_size() const {
  return _internal_topics().size();
}
inline int PollAssignmentRequest::topics_size() const {
  return _internal_topics_size();
}
inline void PollAssignmentRequest::clear_topics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topics_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL PollAssignmentRequest::add_topics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_topics()->Add();
  // @@protoc_insertion_point(field_add_mutable:streamit.v1.PollAssignmentRequest.topics)
  return _s;
}
inline const ::std::string& PollAssignmentRequest::topics(int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.PollAssignmentRequest.topics)
  return _internal_topics().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL PollAssignmentRequest::mutable_topics(int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:streamit.v1.PollAssignmentRequest.topics)
  return _internal_mutable_topics()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void PollAssignmentRequest::set_topics(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_topics()->Mutable(index), ::std::forward<Arg_>(value),
                                               args...);
  // @@protoc_insertion_point(field_set:streamit.v1.PollAssignmentRequest.topics)
}
template <typename Arg_, typename... Args_>
inline void PollAssignmentRequest::add_topics(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_topics(), ::std::forward<Arg_>(value),
                                                      args...);
  // @@protoc_insertion_point(field_add:streamit.v1.PollAssignmentRequest.topics)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& PollAssignmentRequest::topics() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:streamit.v1.PollAssignmentRequest.topics)
  return _internal_topics();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL PollAssignmentRequest::mutable_topics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:streamit.v1.PollAssignmentRequest.topics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_topics();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& PollAssignmentRequest::_internal_topics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topics_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
PollAssignmentRequest::_internal_mutable_topics() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.topics_;
}

// -------------------------------------------------------------------

// PollAssignmentResponse_Assignment

// string topic = 1;
inline void PollAssignmentResponse_Assignment::clear_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topic_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PollAssignmentResponse_Assignment::topic() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.PollAssignmentResponse.Assignment.topic)
  return _internal_topic();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PollAssignmentResponse_Assignment::set_topic(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.topic_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.PollAssignmentResponse.Assignment.topic)
}
inline ::std::string* PROTOBUF_NONNULL PollAssignmentResponse_Assignment::mutable_topic()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_topic();
  // @@protoc_insertion_point(field_mutable:streamit.v1.PollAssignmentResponse.Assignment.topic)
  return _s;
}
inline const ::std::string& PollAssignmentResponse_Assignment::_internal_topic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topic_.Get();
}
inline void PollAssignmentResponse_Assignment::_internal_set_topic(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.topic_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PollAssignmentResponse_Assignment::_internal_mutable_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.topic_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PollAssignmentResponse_Assignment::release_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.PollAssignmentResponse.Assignment.topic)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.topic_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.topic_.Set("", GetArena());
  }
  return released;
}
inline void PollAssignmentResponse_Assignment::set_allocated_topic(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.topic_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.topic_.IsDefault()) {
    _impl_.topic_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.PollAssignmentResponse.Assignment.topic)
}

// repeated int32 partitions = 2;
inline int PollAssignmentResponse_Assignment::_internal_partitions_size() const {
  return _internal_partitions().size();
}
inline int PollAssignmentResponse_Assignment::partitions_size() const {
  return _internal_partitions_size();
}
inline void PollAssignmentResponse_Assignment::clear_partitions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partitions_.Clear();
}
inline ::int32_t PollAssignmentResponse_Assignment::partitions(int index) const {
  // @@protoc_insertion_point(field_get:streamit.v1.PollAssignmentResponse.Assignment.partitions)
  return _internal_partitions().Get(index);
}
inline void PollAssignmentResponse_Assignment::set_partitions(int index, ::int32_t value) {
  _internal_mutable_partitions()->Set(index, value);
  // @@protoc_insertion_point(field_set:streamit.v1.PollAssignmentResponse.Assignment.partitions)
}
inline void PollAssignmentResponse_Assignment::add_partitions(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_partitions()->Add(value);
  // @@protoc_insertion_point(field_add:streamit.v1.PollAssignmentResponse.Assignment.partitions)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& PollAssignmentResponse_Assignment::partitions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:streamit.v1.PollAssignmentResponse.Assignment.partitions)
  return _internal_partitions();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
PollAssignmentResponse_Assignment::mutable_partitions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:streamit.v1.PollAssignmentResponse.Assignment.partitions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_partitions();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& PollAssignmentResponse_Assignment::_internal_partitions()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partitions_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
PollAssignmentResponse_Assignment::_internal_mutable_partitions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.partitions_;
}

// -------------------------------------------------------------------

// PollAssignmentResponse

// repeated .streamit.v1.PollAssignmentResponse.Assignment assignments = 1;
inline int PollAssignmentResponse::_internal_assignments_size() const {
  return _internal_assignments().size();
}
inline int PollAssignmentResponse::assignments_size() const {
  return _internal_assignments_size();
}
inline void PollAssignmentResponse::clear_assignments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assignments_.Clear();
}
inline ::streamit::v1::PollAssignmentResponse_Assignment* PROTOBUF_NONNULL
PollAssignmentResponse::mutable_assignments(int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:streamit.v1.PollAssignmentResponse.assignments)
  return _internal_mutable_assignments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::streamit::v1::PollAssignmentResponse_Assignment>* PROTOBUF_NONNULL
PollAssignmentResponse::mutable_assignments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:streamit.v1.PollAssignmentResponse.assignments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_assignments();
}
inline const ::streamit::v1::PollAssignmentResponse_Assignment& PollAssignmentResponse::assignments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.PollAssignmentResponse.assignments)
  return _internal_assignments().Get(index);
}
inline ::streamit::v1::PollAssignmentResponse_Assignment* PROTOBUF_NONNULL PollAssignmentResponse::add_assignments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::streamit::v1::PollAssignmentResponse_Assignment* _add = _internal_mutable_assignments()->Add();
  // @@protoc_insertion_point(field_add:streamit.v1.PollAssignmentResponse.assignments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::streamit::v1::PollAssignmentResponse_Assignment>&
PollAssignmentResponse::assignments() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:streamit.v1.PollAssignmentResponse.assignments)
  return _internal_assignments();
}
inline const ::google::protobuf::RepeatedPtrField<::streamit::v1::PollAssignmentResponse_Assignment>&
PollAssignmentResponse::_internal_assignments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.assignments_;
}
inline ::google::protobuf::RepeatedPtrField<::streamit::v1::PollAssignmentResponse_Assignment>* PROTOBUF_NONNULL
PollAssignmentResponse::_internal_mutable_assignments() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.assignments_;
}

// int32 heartbeat_interval_ms = 2;
inline void PollAssignmentResponse::clear_heartbeat_interval_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heartbeat_interval_ms_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int32_t PollAssignmentResponse::heartbeat_interval_ms() const {
  // @@protoc_insertion_point(field_get:streamit.v1.PollAssignmentResponse.heartbeat_interval_ms)
  return _internal_heartbeat_interval_ms();
}
inline void PollAssignmentResponse::set_heartbeat_interval_ms(::int32_t value) {
  _internal_set_heartbeat_interval_ms(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:streamit.v1.PollAssignmentResponse.heartbeat_interval_ms)
}
inline ::int32_t PollAssignmentResponse::_internal_heartbeat_interval_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.heartbeat_interval_ms_;
}
inline void PollAssignmentResponse::_internal_set_heartbeat_interval_ms(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heartbeat_interval_ms_ = value;
}

// .streamit.v1.ErrorCode error_code = 3;
inline void PollAssignmentResponse::clear_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::streamit::v1::ErrorCode PollAssignmentResponse::error_code() const {
  // @@protoc_insertion_point(field_get:streamit.v1.PollAssignmentResponse.error_code)
  return _internal_error_code();
}
inline void PollAssignmentResponse::set_error_code(::streamit::v1::ErrorCode value) {
  _internal_set_error_code(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:streamit.v1.PollAssignmentResponse.error_code)
}
inline ::streamit::v1::ErrorCode PollAssignmentResponse::_internal_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::streamit::v1::ErrorCode>(_impl_.error_code_);
}
inline void PollAssignmentResponse::_internal_set_error_code(::streamit::v1::ErrorCode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = value;
}

// string error_message = 4;
inline void PollAssignmentResponse::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PollAssignmentResponse::error_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.PollAssignmentResponse.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PollAssignmentResponse::set_error_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.PollAssignmentResponse.error_message)
}
inline ::std::string* PROTOBUF_NONNULL PollAssignmentResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:streamit.v1.PollAssignmentResponse.error_message)
  return _s;
}
inline const ::std::string& PollAssignmentResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void PollAssignmentResponse::_internal_set_error_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.error_message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PollAssignmentResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.error_message_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PollAssignmentResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.PollAssignmentResponse.error_message)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.error_message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.error_message_.Set("", GetArena());
  }
  return released;
}
inline void PollAssignmentResponse::set_allocated_error_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.PollAssignmentResponse.error_message)
}

// -------------------------------------------------------------------

// CreateTopicRequest

// string topic = 1;
inline void CreateTopicRequest::clear_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topic_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& CreateTopicRequest::topic() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.CreateTopicRequest.topic)
  return _internal_topic();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CreateTopicRequest::set_topic(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.topic_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.CreateTopicRequest.topic)
}
inline ::std::string* PROTOBUF_NONNULL CreateTopicRequest::mutable_topic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_topic();
  // @@protoc_insertion_point(field_mutable:streamit.v1.CreateTopicRequest.topic)
  return _s;
}
inline const ::std::string& CreateTopicRequest::_internal_topic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topic_.Get();
}
inline void CreateTopicRequest::_internal_set_topic(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.topic_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CreateTopicRequest::_internal_mutable_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.topic_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CreateTopicRequest::release_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.CreateTopicRequest.topic)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.topic_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.topic_.Set("", GetArena());
  }
  return released;
}
inline void CreateTopicRequest::set_allocated_topic(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.topic_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.topic_.IsDefault()) {
    _impl_.topic_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.CreateTopicRequest.topic)
}

// int32 partitions = 2;
inline void CreateTopicRequest::clear_partitions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partitions_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int32_t CreateTopicRequest::partitions() const {
  // @@protoc_insertion_point(field_get:streamit.v1.CreateTopicRequest.partitions)
  return _internal_partitions();
}
inline void CreateTopicRequest::set_partitions(::int32_t value) {
  _internal_set_partitions(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:streamit.v1.CreateTopicRequest.partitions)
}
inline ::int32_t CreateTopicRequest::_internal_partitions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partitions_;
}
inline void CreateTopicRequest::_internal_set_partitions(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partitions_ = value;
}

// int32 replication_factor = 3;
inline void CreateTopicRequest::clear_replication_factor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replication_factor_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int32_t CreateTopicRequest::replication_factor() const {
  // @@protoc_insertion_point(field_get:streamit.v1.CreateTopicRequest.replication_factor)
  return _internal_replication_factor();
}
inline void CreateTopicRequest::set_replication_factor(::int32_t value) {
  _internal_set_replication_factor(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:streamit.v1.CreateTopicRequest.replication_factor)
}
inline ::int32_t CreateTopicRequest::_internal_replication_factor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.replication_factor_;
}
inline void CreateTopicRequest::_internal_set_replication_factor(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replication_factor_ = value;
}

// -------------------------------------------------------------------

// CreateTopicResponse

// bool success = 1;
inline void CreateTopicResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline bool CreateTopicResponse::success() const {
  // @@protoc_insertion_point(field_get:streamit.v1.CreateTopicResponse.success)
  return _internal_success();
}
inline void CreateTopicResponse::set_success(bool value) {
  _internal_set_success(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:streamit.v1.CreateTopicResponse.success)
}
inline bool CreateTopicResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void CreateTopicResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string error_message = 2;
inline void CreateTopicResponse::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& CreateTopicResponse::error_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.CreateTopicResponse.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CreateTopicResponse::set_error_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.CreateTopicResponse.error_message)
}
inline ::std::string* PROTOBUF_NONNULL CreateTopicResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:streamit.v1.CreateTopicResponse.error_message)
  return _s;
}
inline const ::std::string& CreateTopicResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void CreateTopicResponse::_internal_set_error_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.error_message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CreateTopicResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.error_message_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CreateTopicResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.CreateTopicResponse.error_message)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.error_message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.error_message_.Set("", GetArena());
  }
  return released;
}
inline void CreateTopicResponse::set_allocated_error_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.CreateTopicResponse.error_message)
}

// .streamit.v1.ErrorCode error_code = 3;
inline void CreateTopicResponse::clear_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::streamit::v1::ErrorCode CreateTopicResponse::error_code() const {
  // @@protoc_insertion_point(field_get:streamit.v1.CreateTopicResponse.error_code)
  return _internal_error_code();
}
inline void CreateTopicResponse::set_error_code(::streamit::v1::ErrorCode value) {
  _internal_set_error_code(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:streamit.v1.CreateTopicResponse.error_code)
}
inline ::streamit::v1::ErrorCode CreateTopicResponse::_internal_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::streamit::v1::ErrorCode>(_impl_.error_code_);
}
inline void CreateTopicResponse::_internal_set_error_code(::streamit::v1::ErrorCode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = value;
}

// -------------------------------------------------------------------

// TopicMetadata

// string topic = 1;
inline void TopicMetadata::clear_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topic_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& TopicMetadata::topic() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.TopicMetadata.topic)
  return _internal_topic();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void TopicMetadata::set_topic(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.topic_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.TopicMetadata.topic)
}
inline ::std::string* PROTOBUF_NONNULL TopicMetadata::mutable_topic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_topic();
  // @@protoc_insertion_point(field_mutable:streamit.v1.TopicMetadata.topic)
  return _s;
}
inline const ::std::string& TopicMetadata::_internal_topic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topic_.Get();
}
inline void TopicMetadata::_internal_set_topic(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.topic_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL TopicMetadata::_internal_mutable_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.topic_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE TopicMetadata::release_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.TopicMetadata.topic)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.topic_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.topic_.Set("", GetArena());
  }
  return released;
}
inline void TopicMetadata::set_allocated_topic(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.topic_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.topic_.IsDefault()) {
    _impl_.topic_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.TopicMetadata.topic)
}

// int32 partitions = 2;
inline void TopicMetadata::clear_partitions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partitions_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int32_t TopicMetadata::partitions() const {
  // @@protoc_insertion_point(field_get:streamit.v1.TopicMetadata.partitions)
  return _internal_partitions();
}
inline void TopicMetadata::set_partitions(::int32_t value) {
  _internal_set_partitions(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:streamit.v1.TopicMetadata.partitions)
}
inline ::int32_t TopicMetadata::_internal_partitions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partitions_;
}
inline void TopicMetadata::_internal_set_partitions(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partitions_ = value;
}

// int32 replication_factor = 3;
inline void TopicMetadata::clear_replication_factor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replication_factor_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int32_t TopicMetadata::replication_factor() const {
  // @@protoc_insertion_point(field_get:streamit.v1.TopicMetadata.replication_factor)
  return _internal_replication_factor();
}
inline void TopicMetadata::set_replication_factor(::int32_t value) {
  _internal_set_replication_factor(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:streamit.v1.TopicMetadata.replication_factor)
}
inline ::int32_t TopicMetadata::_internal_replication_factor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.replication_factor_;
}
inline void TopicMetadata::_internal_set_replication_factor(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replication_factor_ = value;
}

// repeated .streamit.v1.PartitionMetadata partition_metadata = 4;
inline int TopicMetadata::_internal_partition_metadata_size() const {
  return _internal_partition_metadata().size();
}
inline int TopicMetadata::partition_metadata_size() const {
  return _internal_partition_metadata_size();
}
inline void TopicMetadata::clear_partition_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partition_metadata_.Clear();
}
inline ::streamit::v1::PartitionMetadata* PROTOBUF_NONNULL TopicMetadata::mutable_partition_metadata(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:streamit.v1.TopicMetadata.partition_metadata)
  return _internal_mutable_partition_metadata()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::streamit::v1::PartitionMetadata>* PROTOBUF_NONNULL
TopicMetadata::mutable_partition_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:streamit.v1.TopicMetadata.partition_metadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_partition_metadata();
}
inline const ::streamit::v1::PartitionMetadata& TopicMetadata::partition_metadata(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.TopicMetadata.partition_metadata)
  return _internal_partition_metadata().Get(index);
}
inline ::streamit::v1::PartitionMetadata* PROTOBUF_NONNULL TopicMetadata::add_partition_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::streamit::v1::PartitionMetadata* _add = _internal_mutable_partition_metadata()->Add();
  // @@protoc_insertion_point(field_add:streamit.v1.TopicMetadata.partition_metadata)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::streamit::v1::PartitionMetadata>&
TopicMetadata::partition_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:streamit.v1.TopicMetadata.partition_metadata)
  return _internal_partition_metadata();
}
inline const ::google::protobuf::RepeatedPtrField<::streamit::v1::PartitionMetadata>&
TopicMetadata::_internal_partition_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partition_metadata_;
}
inline ::google::protobuf::RepeatedPtrField<::streamit::v1::PartitionMetadata>* PROTOBUF_NONNULL
TopicMetadata::_internal_mutable_partition_metadata() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.partition_metadata_;
}

// -------------------------------------------------------------------

// PartitionMetadata

// int32 partition = 1;
inline void PartitionMetadata::clear_partition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partition_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::int32_t PartitionMetadata::partition() const {
  // @@protoc_insertion_point(field_get:streamit.v1.PartitionMetadata.partition)
  return _internal_partition();
}
inline void PartitionMetadata::set_partition(::int32_t value) {
  _internal_set_partition(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:streamit.v1.PartitionMetadata.partition)
}
inline ::int32_t PartitionMetadata::_internal_partition() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partition_;
}
inline void PartitionMetadata::_internal_set_partition(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partition_ = value;
}

// int32 leader = 2;
inline void PartitionMetadata::clear_leader() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leader_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int32_t PartitionMetadata::leader() const {
  // @@protoc_insertion_point(field_get:streamit.v1.PartitionMetadata.leader)
  return _internal_leader();
}
inline void PartitionMetadata::set_leader(::int32_t value) {
  _internal_set_leader(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:streamit.v1.PartitionMetadata.leader)
}
inline ::int32_t PartitionMetadata::_internal_leader() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.leader_;
}
inline void PartitionMetadata::_internal_set_leader(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leader_ = value;
}

// repeated int32 replicas = 3;
inline int PartitionMetadata::_internal_replicas_size() const {
  return _internal_replicas().size();
}
inline int PartitionMetadata::replicas_size() const {
  return _internal_replicas_size();
}
inline void PartitionMetadata::clear_replicas() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replicas_.Clear();
}
inline ::int32_t PartitionMetadata::replicas(int index) const {
  // @@protoc_insertion_point(field_get:streamit.v1.PartitionMetadata.replicas)
  return _internal_replicas().Get(index);
}
inline void PartitionMetadata::set_replicas(int index, ::int32_t value) {
  _internal_mutable_replicas()->Set(index, value);
  // @@protoc_insertion_point(field_set:streamit.v1.PartitionMetadata.replicas)
}
inline void PartitionMetadata::add_replicas(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_replicas()->Add(value);
  // @@protoc_insertion_point(field_add:streamit.v1.PartitionMetadata.replicas)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& PartitionMetadata::replicas() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:streamit.v1.PartitionMetadata.replicas)
  return _internal_replicas();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL PartitionMetadata::mutable_replicas()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:streamit.v1.PartitionMetadata.replicas)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_replicas();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& PartitionMetadata::_internal_replicas() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.replicas_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL PartitionMetadata::_internal_mutable_replicas() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.replicas_;
}

// repeated int32 isr = 4;
inline int PartitionMetadata::_internal_isr_size() const {
  return _internal_isr().size();
}
inline int PartitionMetadata::isr_size() const {
  return _internal_isr_size();
}
inline void PartitionMetadata::clear_isr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isr_.Clear();
}
inline ::int32_t PartitionMetadata::isr(int index) const {
  // @@protoc_insertion_point(field_get:streamit.v1.PartitionMetadata.isr)
  return _internal_isr().Get(index);
}
inline void PartitionMetadata::set_isr(int index, ::int32_t value) {
  _internal_mutable_isr()->Set(index, value);
  // @@protoc_insertion_point(field_set:streamit.v1.PartitionMetadata.isr)
}
inline void PartitionMetadata::add_isr(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_isr()->Add(value);
  // @@protoc_insertion_point(field_add:streamit.v1.PartitionMetadata.isr)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& PartitionMetadata::isr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:streamit.v1.PartitionMetadata.isr)
  return _internal_isr();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL PartitionMetadata::mutable_isr()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:streamit.v1.PartitionMetadata.isr)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_isr();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& PartitionMetadata::_internal_isr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isr_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL PartitionMetadata::_internal_mutable_isr() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.isr_;
}

// -------------------------------------------------------------------

// DescribeTopicRequest

// string topic = 1;
inline void DescribeTopicRequest::clear_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topic_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& DescribeTopicRequest::topic() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.DescribeTopicRequest.topic)
  return _internal_topic();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DescribeTopicRequest::set_topic(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.topic_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.DescribeTopicRequest.topic)
}
inline ::std::string* PROTOBUF_NONNULL DescribeTopicRequest::mutable_topic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_topic();
  // @@protoc_insertion_point(field_mutable:streamit.v1.DescribeTopicRequest.topic)
  return _s;
}
inline const ::std::string& DescribeTopicRequest::_internal_topic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topic_.Get();
}
inline void DescribeTopicRequest::_internal_set_topic(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.topic_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DescribeTopicRequest::_internal_mutable_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.topic_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DescribeTopicRequest::release_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.DescribeTopicRequest.topic)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.topic_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.topic_.Set("", GetArena());
  }
  return released;
}
inline void DescribeTopicRequest::set_allocated_topic(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.topic_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.topic_.IsDefault()) {
    _impl_.topic_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.DescribeTopicRequest.topic)
}

// -------------------------------------------------------------------

// DescribeTopicResponse

// .streamit.v1.TopicMetadata metadata = 1;
inline bool DescribeTopicResponse::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline void DescribeTopicResponse::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ != nullptr)
    _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::streamit::v1::TopicMetadata& DescribeTopicResponse::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::streamit::v1::TopicMetadata* p = _impl_.metadata_;
  return p != nullptr
             ? *p
             : reinterpret_cast<const ::streamit::v1::TopicMetadata&>(::streamit::v1::_TopicMetadata_default_instance_);
}
inline const ::streamit::v1::TopicMetadata& DescribeTopicResponse::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.DescribeTopicResponse.metadata)
  return _internal_metadata();
}
inline void DescribeTopicResponse::unsafe_arena_set_allocated_metadata(
    ::streamit::v1::TopicMetadata* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::streamit::v1::TopicMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:streamit.v1.DescribeTopicResponse.metadata)
}
inline ::streamit::v1::TopicMetadata* PROTOBUF_NULLABLE DescribeTopicResponse::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::streamit::v1::TopicMetadata* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::streamit::v1::TopicMetadata* PROTOBUF_NULLABLE DescribeTopicResponse::unsafe_arena_release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.DescribeTopicResponse.metadata)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::streamit::v1::TopicMetadata* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::streamit::v1::TopicMetadata* PROTOBUF_NONNULL DescribeTopicResponse::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::streamit::v1::TopicMetadata>(GetArena());
    _impl_.metadata_ = reinterpret_cast<::streamit::v1::TopicMetadata*>(p);
  }
  return _impl_.metadata_;
}
inline ::streamit::v1::TopicMetadata* PROTOBUF_NONNULL DescribeTopicResponse::mutable_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::streamit::v1::TopicMetadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:streamit.v1.DescribeTopicResponse.metadata)
  return _msg;
}
inline void DescribeTopicResponse::set_allocated_metadata(::streamit::v1::TopicMetadata* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.metadata_ = reinterpret_cast<::streamit::v1::TopicMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.DescribeTopicResponse.metadata)
}

// .streamit.v1.ErrorCode error_code = 2;
inline void DescribeTopicResponse::clear_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::streamit::v1::ErrorCode DescribeTopicResponse::error_code() const {
  // @@protoc_insertion_point(field_get:streamit.v1.DescribeTopicResponse.error_code)
  return _internal_error_code();
}
inline void DescribeTopicResponse::set_error_code(::streamit::v1::ErrorCode value) {
  _internal_set_error_code(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:streamit.v1.DescribeTopicResponse.error_code)
}
inline ::streamit::v1::ErrorCode DescribeTopicResponse::_internal_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::streamit::v1::ErrorCode>(_impl_.error_code_);
}
inline void DescribeTopicResponse::_internal_set_error_code(::streamit::v1::ErrorCode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = value;
}

// string error_message = 3;
inline void DescribeTopicResponse::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& DescribeTopicResponse::error_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.DescribeTopicResponse.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DescribeTopicResponse::set_error_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.DescribeTopicResponse.error_message)
}
inline ::std::string* PROTOBUF_NONNULL DescribeTopicResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:streamit.v1.DescribeTopicResponse.error_message)
  return _s;
}
inline const ::std::string& DescribeTopicResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void DescribeTopicResponse::_internal_set_error_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.error_message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DescribeTopicResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.error_message_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DescribeTopicResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.DescribeTopicResponse.error_message)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.error_message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.error_message_.Set("", GetArena());
  }
  return released;
}
inline void DescribeTopicResponse::set_allocated_error_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.DescribeTopicResponse.error_message)
}

// -------------------------------------------------------------------

// FindLeaderRequest

// string topic = 1;
inline void FindLeaderRequest::clear_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topic_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& FindLeaderRequest::topic() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.FindLeaderRequest.topic)
  return _internal_topic();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FindLeaderRequest::set_topic(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.topic_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.FindLeaderRequest.topic)
}
inline ::std::string* PROTOBUF_NONNULL FindLeaderRequest::mutable_topic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_topic();
  // @@protoc_insertion_point(field_mutable:streamit.v1.FindLeaderRequest.topic)
  return _s;
}
inline const ::std::string& FindLeaderRequest::_internal_topic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topic_.Get();
}
inline void FindLeaderRequest::_internal_set_topic(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.topic_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FindLeaderRequest::_internal_mutable_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.topic_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FindLeaderRequest::release_topic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.FindLeaderRequest.topic)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.topic_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.topic_.Set("", GetArena());
  }
  return released;
}
inline void FindLeaderRequest::set_allocated_topic(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.topic_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.topic_.IsDefault()) {
    _impl_.topic_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.FindLeaderRequest.topic)
}

// int32 partition = 2;
inline void FindLeaderRequest::clear_partition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partition_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int32_t FindLeaderRequest::partition() const {
  // @@protoc_insertion_point(field_get:streamit.v1.FindLeaderRequest.partition)
  return _internal_partition();
}
inline void FindLeaderRequest::set_partition(::int32_t value) {
  _internal_set_partition(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:streamit.v1.FindLeaderRequest.partition)
}
inline ::int32_t FindLeaderRequest::_internal_partition() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partition_;
}
inline void FindLeaderRequest::_internal_set_partition(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partition_ = value;
}

// -------------------------------------------------------------------

// FindLeaderResponse

// int32 leader_broker_id = 1;
inline void FindLeaderResponse::clear_leader_broker_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leader_broker_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int32_t FindLeaderResponse::leader_broker_id() const {
  // @@protoc_insertion_point(field_get:streamit.v1.FindLeaderResponse.leader_broker_id)
  return _internal_leader_broker_id();
}
inline void FindLeaderResponse::set_leader_broker_id(::int32_t value) {
  _internal_set_leader_broker_id(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:streamit.v1.FindLeaderResponse.leader_broker_id)
}
inline ::int32_t FindLeaderResponse::_internal_leader_broker_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.leader_broker_id_;
}
inline void FindLeaderResponse::_internal_set_leader_broker_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leader_broker_id_ = value;
}

// string leader_host = 2;
inline void FindLeaderResponse::clear_leader_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leader_host_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& FindLeaderResponse::leader_host() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.FindLeaderResponse.leader_host)
  return _internal_leader_host();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FindLeaderResponse::set_leader_host(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.leader_host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.FindLeaderResponse.leader_host)
}
inline ::std::string* PROTOBUF_NONNULL FindLeaderResponse::mutable_leader_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_leader_host();
  // @@protoc_insertion_point(field_mutable:streamit.v1.FindLeaderResponse.leader_host)
  return _s;
}
inline const ::std::string& FindLeaderResponse::_internal_leader_host() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.leader_host_.Get();
}
inline void FindLeaderResponse::_internal_set_leader_host(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.leader_host_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FindLeaderResponse::_internal_mutable_leader_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.leader_host_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FindLeaderResponse::release_leader_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.FindLeaderResponse.leader_host)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.leader_host_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.leader_host_.Set("", GetArena());
  }
  return released;
}
inline void FindLeaderResponse::set_allocated_leader_host(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.leader_host_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.leader_host_.IsDefault()) {
    _impl_.leader_host_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.FindLeaderResponse.leader_host)
}

// int32 leader_port = 3;
inline void FindLeaderResponse::clear_leader_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leader_port_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::int32_t FindLeaderResponse::leader_port() const {
  // @@protoc_insertion_point(field_get:streamit.v1.FindLeaderResponse.leader_port)
  return _internal_leader_port();
}
inline void FindLeaderResponse::set_leader_port(::int32_t value) {
  _internal_set_leader_port(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:streamit.v1.FindLeaderResponse.leader_port)
}
inline ::int32_t FindLeaderResponse::_internal_leader_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.leader_port_;
}
inline void FindLeaderResponse::_internal_set_leader_port(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leader_port_ = value;
}

// .streamit.v1.ErrorCode error_code = 4;
inline void FindLeaderResponse::clear_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::streamit::v1::ErrorCode FindLeaderResponse::error_code() const {
  // @@protoc_insertion_point(field_get:streamit.v1.FindLeaderResponse.error_code)
  return _internal_error_code();
}
inline void FindLeaderResponse::set_error_code(::streamit::v1::ErrorCode value) {
  _internal_set_error_code(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:streamit.v1.FindLeaderResponse.error_code)
}
inline ::streamit::v1::ErrorCode FindLeaderResponse::_internal_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::streamit::v1::ErrorCode>(_impl_.error_code_);
}
inline void FindLeaderResponse::_internal_set_error_code(::streamit::v1::ErrorCode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = value;
}

// string error_message = 5;
inline void FindLeaderResponse::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& FindLeaderResponse::error_message() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:streamit.v1.FindLeaderResponse.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FindLeaderResponse::set_error_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:streamit.v1.FindLeaderResponse.error_message)
}
inline ::std::string* PROTOBUF_NONNULL FindLeaderResponse::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:streamit.v1.FindLeaderResponse.error_message)
  return _s;
}
inline const ::std::string& FindLeaderResponse::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void FindLeaderResponse::_internal_set_error_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.error_message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FindLeaderResponse::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.error_message_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FindLeaderResponse::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:streamit.v1.FindLeaderResponse.error_message)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.error_message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.error_message_.Set("", GetArena());
  }
  return released;
}
inline void FindLeaderResponse::set_allocated_error_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.error_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.error_message_.IsDefault()) {
    _impl_.error_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:streamit.v1.FindLeaderResponse.error_message)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif // __GNUC__

// @@protoc_insertion_point(namespace_scope)
} // namespace v1
} // namespace streamit

namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::streamit::v1::Ack> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::streamit::v1::Ack>() {
  return ::streamit::v1::Ack_descriptor();
}
template <>
struct is_proto_enum<::streamit::v1::ErrorCode> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::streamit::v1::ErrorCode>() {
  return ::streamit::v1::ErrorCode_descriptor();
}

} // namespace protobuf
} // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif // proto_2fstreamit_2eproto_2epb_2eh
